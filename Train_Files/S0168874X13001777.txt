@&#MAIN-TITLE@&#Wavelet-based numerical analysis: A review and classification

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Wavelet analysis is a method called numerical microscope in signal processing and numerical analysis.


                        
                        
                           
                           A comprehensive review on wavelet-based numerical analysis is made and their merits, drawbacks, and future directions are noted.


                        
                        
                           
                           From the aspect of algorithm construction, the wavelet-based numerical analysis methods are categorized into five types.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Wavelet

Numerical analysis

Wavelet weighted residual method

Wavelet Galerkin method

Wavelet collocation method

Wavelet Petrov–Galerkin method

Wavelet least-squares method

Wavelet finite element method

Wavelet boundary element method

Wavelet meshless method

Wavelet-optimized finite difference method

Daubechies wavelet

Spline wavelet

Hermite wavelet

Polynomical wavelet

Second-generation wavelet

@&#ABSTRACT@&#


               
               
                  Wavelet analysis is a new method called ‘numerical microscope’ in signal and image processing. It has the desirable advantages of multi-resolution properties and various basis functions, which fulfill an enormous potential for solving partial differential equations (PDEs). The numerical analysis with wavelet received its first attention in 1992, since then researchers have shown growing interest in it. Various methods including wavelet weighted residual method (WWRM), wavelet finite element method (WFEM), wavelet boundary method (WBM), wavelet meshless method (WMM) and wavelet-optimized finite difference method (WOFD), etc. have acquired an important role in recent years. This paper aims to make a comprehensive review and classification on wavelet-based numerical analysis and to note their merits, drawbacks, and future directions. And thus the present review helps readers identify research starting points in wavelet-based numerical analysis and guides researchers and practitioners.
               
            

@&#INTRODUCTION@&#

In numerical analysis, classical discretization methods, such as finite differences, finite elements, spectral elements, are powerful tools for solving PDEs. However, singularities and steep changes often emerge in many phenomena, like stress concentration, elastoplasticity, shock wave and crack. Since small-scale features only exist in a small percentage of the solution domain, if one chooses a uniform numerical grid fine enough to resolve the small-scale characteristics, then the solution to the equations will be over-resolved in the majority of the domain. One would like, ideally, to have a dense grid where small-scale structure exists and a sparse grid where the solution is only composed of large-scale features [1]. It demands for the usage of non-uniform grids or moving elements to dynamically adapt to the changes in the solution. That is where wavelets play a role.

Wavelet is called “numerical microscrope” in signal and image processing. It has been 31 years since Morlet proposed the concept of wavelet analysis to automatically reach the best trade-off between time and frequency resolution [2]. Later, this proposition was considered as a generalization of ideas promoted by Haar (1910), Gabor (1946) [3], and Zweig (1976) [4]. Wavelet was in the air in the numerical analysis community in the early 1990s [5]. Generally, wavelet is used to describe a function that features compact support, i.e. it is nonzero only on a finite interval. The representation of a set of time-dependent data on a wavelet basis leads to a unique structure of information that is localized simultaneously in the frequency and time domains. This does not occur in a Fourier representation, where specific frequencies cannot be associated with a particular time interval, since the basis functions have constant resolution on the entire domain. A wavelet basis representation originates a set of wavelet coefficients structured over different levels of resolution. Each coefficient is associated with a resolution level and a point in the time domain. The coefficients involved in the lowest-resolution level describe the low-frequency features of the data spanning over broad time intervals. At the highest level, the coefficients are associated with highly localized high-frequency features [6]. These desirable advantages draw sight of researchers to apply wavelets in the resolution of PDEs [7–13]. In the case of a moving steep front, using the wavelet transformation one can track its position and increase the local resolution of the grid by adding higher resolution wavelets in that region. On the other hand, the resolution level in the smoother regions can be appropriately decreased, avoiding an unnecessarily dense grid.

In 1991, Beylkin firstly carried out the study of numerical calculation based on wavelet. The study was presented in the form of conference paper [14], military AD report [15] and official journals [16,17]. Daubechies wavelet was used in the calculation process. Subsequently, Jaffard proved the superiority of solving elliptic partial differential equations by use of wavelet [18,19]. Zweig found that the generalized wave equation, on which the continuous wavelet transform is based, can be used to understand phenomena related to the hearing process [20]. Dahmen and Chen initiated related studies [21,22]. These early research literatures had a great effect and motivated the applications of wavelet in numerical calculation. Hereafter, a lot of research institutions and universities began to conduct the study of wavelet. These papers showed that wavelet multi-resolution and wavelet properties, including compact support, vanishing moment and norm equivalence, were superior and universal in equation solution.

Bertoluzza et al. studied error estimation and convergence of wavelet collocation methods and wavelet numerical algorithms [23–26]. Cohen and Kaber et al. studied wavelet finite volume methods and wavelet multiscale algorithms [27,28]. Berrone and Dmmel et al. studied wavelet-Galerkin method in any solving domain [29]. Radha, Williams and Amaratunga applied wavelet finite element to the study of microscale molecular structure [30,31]. Chen and Micchelli studied Galerkin methods of discrete wavelet [32]. Sweldens and Piessens et al. performed a series of wavelet application studies in numerical analysis [33]. In addition, Chen, Li and He et al. have successively done studies on wavelet based error estimator and adaptive schemes [34–37].

During the past two decades, the theories of wavelet numerical methods have been developed in a variety of directions. In summary, from the aspect of algorithm construction, the main wavelet-based numerical analysis methods are categorized as follows:
                        
                           •
                           Wavelet weighted residual method (WWRM);

Wavelet finite element method (WFEM);

Wavelet boundary element (WBE);

Wavelet meshless method (WMM)

Other wavelet-based numerical methods

Among the above-mentioned methods, weighted residual method is the earliest numerical method in computational mechanics, so it is necessary to illustrate in an independent class although it has many common ground with other methods. Based on the Galerkin method, the famous weighted residual method, finite element method (FEM) is proposed. FEM is more universal compared with other methods. Many successful software such as ANSYS, NASTRAN are constructed on the basis of FEM. However, the accuracy of FEM is not the best in certain fields. To improve the accuracy and efficiency of FEM, the boundary element method (BEM) is proposed. Furthermore, meshing is an important and tough task in FEM or BEM for some complex shapes. To ease this problem, the meshless method is introduced. In the classical numerical methods, in order to approximate unknown functions, it is key and necessary to construct the so-called shape functions, which are complicated, time consuming and even hard to realize in some special conditions. In addition, the complexity of shape functions will result in the increase of computational cost in the total solution process. It is desirable to find a new method which is simple and reasonable to construct shape functions. However, it seems to be a complicated task. So we should resort to some other mathematics tools. Combined with wavelet, the classical methods show a new appearance in performance. They act as the basic foundation and theoretical background of classification.

Abundant wavelet functions provide many options for investigators in engineering structural analysis. Daubechies wavelet, spline wavelet, polynomial wavelet, trigonometric wavelet, Hermite wavelet, second-generation wavelet, etc. have been introduced into wavelet numerical analysis, which greatly enriches the wavelet element library. Successful applications in one dimensional, two dimensional, and three dimensional structures prove the accuracy and validity of the wavelet based approaches. Furthermore, analysis in engineering singularities problems, such as structural crack identifications, plastic calculations and temperature field analysis with large heat gradient, shows the advantages of wavelet multiresolution and flexibility, and embodies large potential values in the future. Basu indicated that the finite difference and Ritz type methods in the pre-computer era had largely been replaced by finite element method, boundary element method, and meshless method, and in the near future it may be the turn for wavelet based numerical methods to replace the above-mentioned [38].

The objective of the present study is to provide a summary review and classification on wavelet multiresolution in numerical analysis domains and structural calculation fields, note their merits, drawbacks, and future directions, and help readers identify the starting points for research in wavelet numerical analysis and guide researchers and practitioners.

Wavelet theory has generated a tremendous amount of interest in many research areas such as mathematics, physics, computer science, and engineering. The integral of wavelet function 
                           ψ
                           (
                           x
                           )
                         is zero in the interval 
                           (
                           −
                           ∞
                           ,
                           
                           +
                           ∞
                           )
                        . We called 
                           ψ
                           (
                           x
                           )
                         mother wavelet or basic wavelet [39,40].
                           
                              (1)
                              
                                 
                                    ∫
                                    
                                       −
                                       ∞
                                    
                                    
                                       +
                                       ∞
                                    
                                 
                                 
                                    ψ
                                    (
                                    x
                                    )
                                 
                                 d
                                 x
                                 =
                                 0
                              
                           
                        traditionally, wavelets are defined as shift k and stretch 2
                           j
                         of one basic wavelet.
                           
                              (2)
                              
                                 
                                    
                                       ψ
                                    
                                    
                                       j
                                       ,
                                       k
                                    
                                 
                                 (
                                 x
                                 )
                                 =
                                 
                                    
                                       2
                                    
                                    
                                       j
                                       /
                                       2
                                    
                                 
                                 ψ
                                 (
                                 
                                    
                                       2
                                    
                                    j
                                 
                                 x
                                 −
                                 k
                                 )
                                 ,
                                 
                                 j
                                 ,
                                 
                                 k
                                 ∈
                                 Ζ
                              
                           
                        thereby, any function can be expressed as
                           
                              (3)
                              
                                 f
                                 (
                                 x
                                 )
                                 =
                                 
                                    ∑
                                    
                                       j
                                       ,
                                       k
                                       =
                                       −
                                       ∞
                                    
                                    ∞
                                 
                                 
                                    
                                       
                                          d
                                       
                                       
                                          j
                                          ,
                                          k
                                       
                                    
                                    
                                       
                                          ψ
                                       
                                       
                                          j
                                          ,
                                          k
                                       
                                    
                                    (
                                    x
                                    )
                                 
                              
                           
                        among
                           
                              (4)
                              
                                 
                                    
                                       d
                                    
                                    
                                       j
                                       ,
                                       k
                                    
                                 
                                 =
                                 〈
                                 
                                    
                                       
                                          
                                             f
                                             (
                                             x
                                             )
                                             ,
                                          
                                       
                                       
                                          
                                             
                                                
                                                   ψ
                                                
                                                
                                                   j
                                                   ,
                                                   k
                                                
                                             
                                             (
                                             x
                                             )
                                          
                                       
                                    
                                 
                                 〉
                              
                           
                        
                        
                           〈
                           ,
                           〉
                         indicates inner product. We assume wavelet space W
                        
                           j
                         as the linear closure 
                           {
                           
                              
                                 ψ
                              
                              
                                 j
                                 ,
                                 k
                              
                           
                           :
                           k
                           ∈
                           Ζ
                           }
                        , that is
                           
                              (5)
                              
                                 
                                    
                                       W
                                    
                                    
                                       j
                                    
                                 
                                 :
                                 =
                                 
                                    
                                       clos
                                    
                                    
                                       
                                          
                                             L
                                          
                                          2
                                       
                                       (
                                       R
                                       )
                                    
                                 
                                 {
                                 
                                    
                                       ψ
                                    
                                    
                                       j
                                       ,
                                       k
                                    
                                 
                                 :
                                 k
                                 ∈
                                 Ζ
                                 }
                                 ,
                                 
                                 j
                                 ∈
                                 Ζ
                              
                           
                        then, 
                           
                              
                                 L
                              
                              2
                           
                           (
                           R
                           )
                         can be decomposed into wavelet space W
                        
                           j
                         orthogonal sum
                           
                              (6)
                              
                                 
                                    
                                       L
                                    
                                    2
                                 
                                 (
                                 R
                                 )
                                 =
                                 
                                    
                                       ∑
                                       
                                          j
                                          ∈
                                          Z
                                       
                                    
                                    
                                       
                                          
                                             W
                                          
                                          
                                             j
                                          
                                       
                                       =
                                       ⋯
                                       
                                          +
                                          ̇
                                       
                                       
                                          
                                             W
                                          
                                          
                                             −
                                             1
                                          
                                       
                                       
                                          +
                                          ̇
                                       
                                       
                                          
                                             W
                                          
                                          
                                             0
                                          
                                       
                                       
                                          +
                                          ̇
                                       
                                       
                                          
                                             W
                                          
                                          
                                             1
                                          
                                       
                                       
                                          +
                                          ̇
                                       
                                       ⋯
                                    
                                 
                              
                           
                        
                     

The multiresolution analysis of wavelets is an important property in the multilevel approximation of engineering problems [41]. A multiresolution analysis is composed of a set of closed subspaces 
                           
                              
                                 V
                              
                              
                                 j
                              
                           
                           ∈
                           
                              
                                 L
                              
                              2
                           
                           (
                           R
                           )
                         with 
                           j
                           ∈
                           Z
                         and satisfies the following properties [42]:
                           
                              (7)
                              
                                 ⋯
                                 ⊂
                                 
                                    
                                       V
                                    
                                    
                                       −
                                       1
                                    
                                 
                                 ⊂
                                 
                                    
                                       V
                                    
                                    
                                       0
                                    
                                 
                                 ⊂
                                 
                                    
                                       V
                                    
                                    
                                       1
                                    
                                 
                                 ⊂
                                 ⋯
                              
                           
                        
                        
                           
                              (8)
                              
                                 c
                                 l
                                 o
                                 
                                    
                                       s
                                    
                                    
                                       
                                          
                                             L
                                          
                                          2
                                       
                                       (
                                       R
                                       )
                                    
                                 
                                 
                                    {
                                    
                                       
                                          ∪
                                          
                                             j
                                             ∈
                                             Z
                                          
                                       
                                       
                                          
                                             V
                                          
                                          
                                             j
                                          
                                       
                                    
                                    }
                                 
                                 =
                                 
                                    
                                       L
                                    
                                    2
                                 
                                 (
                                 R
                                 )
                              
                           
                        
                        
                           
                              (9)
                              
                                 
                                    ∩
                                    
                                       j
                                       ∈
                                       Ζ
                                    
                                 
                                 
                                    
                                       V
                                    
                                    
                                       j
                                    
                                 
                                 =
                                 {
                                 0
                                 }
                              
                           
                        
                        
                           
                              (10)
                              
                                 
                                    
                                       V
                                    
                                    
                                       j
                                       +
                                       1
                                    
                                 
                                 =
                                 
                                    
                                       V
                                    
                                    
                                       j
                                    
                                 
                                 
                                    +
                                    ̇
                                 
                                 
                                    
                                       W
                                    
                                    
                                       j
                                    
                                 
                              
                           
                        
                        
                           
                              (11)
                              
                                 f
                                 (
                                 x
                                 )
                                 ∈
                                 
                                    
                                       V
                                    
                                    
                                       j
                                    
                                 
                                 ⇔
                                 f
                                 (
                                 2
                                 x
                                 )
                                 ∈
                                 
                                    
                                       V
                                    
                                    
                                       j
                                       +
                                       1
                                    
                                 
                                 
                                 ,
                                 
                                 j
                                 ∈
                                 Z
                              
                           
                        
                        
                           
                              (12)
                              
                                 f
                                 (
                                 x
                                 )
                                 ∈
                                 
                                    
                                       V
                                    
                                    
                                       j
                                    
                                 
                                 ⇔
                                 f
                                 (
                                 x
                                 −
                                 k
                                 )
                                 ∈
                                 
                                    
                                       V
                                    
                                    
                                       j
                                    
                                 
                                 ,
                                 
                                 j
                                 ∈
                                 Z
                              
                           
                        where j is the level of resolution, 
                           j
                           ∈
                           Z
                         is an integer index set involved with resolution levels, V
                        
                           j
                         denotes approximation spaces of level j. For each V
                        
                           j
                        , there exists a complement of V
                        
                           j
                         in V
                        
                           j+1, namely W
                        
                           j
                        .

When constructing a wavelet function 
                           ψ
                           (
                           x
                           )
                        , we got a nested sequence {V
                        
                           j
                        } satisfying the above properties. These properties are necessary condition for the existence of the wavelet function 
                           ψ
                           (
                           x
                           )
                         
                        [43]. A function 
                           φ
                           (
                           x
                           )
                           ∈
                           
                              
                                 L
                              
                              2
                           
                           (
                           R
                           )
                         is called a scaling function, we have
                           
                              (13)
                              
                                 
                                    
                                       V
                                    
                                    
                                       j
                                    
                                 
                                 :
                                 =
                                 
                                    
                                       clos
                                    
                                    
                                       
                                          
                                             L
                                          
                                          2
                                       
                                       (
                                       R
                                       )
                                    
                                 
                                 {
                                 
                                    
                                       φ
                                    
                                    
                                       j
                                       ,
                                       k
                                    
                                 
                                 :
                                 k
                                 ∈
                                 Z
                                 }
                                 ,
                                 
                                 j
                                 ∈
                                 Z
                              
                           
                        scaling function 
                           
                              
                                 φ
                              
                              
                                 j
                                 ,
                                 k
                              
                           
                           (
                           x
                           )
                           =
                           
                              
                                 2
                              
                              
                                 j
                                 /
                                 2
                              
                           
                           φ
                           (
                           
                              
                                 2
                              
                              j
                           
                           x
                           −
                           k
                           )
                           ,
                           
                           j
                           ,
                           
                           k
                           ∈
                           Z
                         defined in subspace V
                        
                           j
                         of 
                           
                              
                                 L
                              
                              2
                           
                           (
                           R
                           )
                         satisfies the above properties, and 
                           {
                           φ
                           (
                           x
                           −
                           k
                           )
                           :
                           k
                           ∈
                           Z
                           }
                         is one of the Riesz base, as we know, linear independence is characteristic of Riesz base.

Usually, scaling function 
                           φ
                           (
                           x
                           )
                         generates a multiresolution analysis {V
                        
                           j
                        } of space 
                           
                              
                                 L
                              
                              2
                           
                           (
                           R
                           )
                         
                        [44]. Eq. (8) indicates that each function f(x) can use V
                        
                           j
                         to approximate the projection 
                           
                              
                                 P
                              
                              
                                 j
                              
                           
                           f
                           (
                           x
                           )
                         in space 
                           
                              
                                 L
                              
                              2
                           
                           (
                           R
                           )
                        , and the resolution 2
                           j
                         tends to be +∞. The projection will truly approach to the original function
                           
                              (14)
                              
                                 
                                    
                                       V
                                    
                                    
                                       j
                                    
                                 
                                 :
                                 =
                                 
                                    
                                       clos
                                    
                                    
                                       
                                          
                                             L
                                          
                                          2
                                       
                                       (
                                       R
                                       )
                                    
                                 
                                 {
                                 
                                    
                                       φ
                                    
                                    
                                       j
                                       ,
                                       k
                                    
                                 
                                 :
                                 k
                                 ∈
                                 Ζ
                                 }
                                 ,
                                 
                                 j
                                 ∈
                                 Ζ
                              
                           
                        Eq. (9) means that by reducing j, the projection 
                           
                              
                                 P
                              
                              
                                 j
                              
                           
                           f
                           (
                           x
                           )
                         can have arbitrary low energy, thus when the resolution tends to be zero (
                           j
                           →
                           −
                           ∞
                        ), we will lose all the details of the function
                           
                              (15)
                              
                                 
                                    
                                       lim
                                    
                                    
                                       j
                                       →
                                       −
                                       ∞
                                    
                                 
                                 |
                                 |
                                 
                                    
                                       P
                                    
                                    
                                       j
                                    
                                 
                                 f
                                 (
                                 x
                                 )
                                 |
                                 |
                                 =
                                 0
                              
                           
                        when these properties contain 
                           j
                           →
                           −
                           ∞
                        , 
                           
                              
                                 P
                              
                              
                                 j
                              
                           
                           f
                           (
                           x
                           )
                         larger "Change" is removed. For function approximation, more singular and mutation are removed; for signal processing, more high frequency detail signals are removed [45]. The removal of these changes is that the rate of change step by step dissection by 2
                           j
                        , and stored in Eq. (10) in the complement subspace W
                        
                           j
                        , we have
                           
                              (16)
                              
                                 
                                    
                                       f
                                    
                                    
                                       j
                                       +
                                       1
                                    
                                 
                                 (
                                 x
                                 )
                                 =
                                 
                                    
                                       f
                                    
                                    
                                       j
                                    
                                 
                                 (
                                 x
                                 )
                                 
                                    +
                                    ̇
                                 
                                 
                                    
                                       g
                                    
                                    
                                       j
                                    
                                 
                                 (
                                 x
                                 )
                              
                           
                        where
                           
                              (17)
                              
                                 
                                    
                                       f
                                    
                                    
                                       j
                                    
                                 
                                 (
                                 x
                                 )
                                 =
                                 
                                    
                                       ∑
                                       k
                                    
                                    
                                       
                                          
                                             c
                                          
                                          
                                             j
                                             ,
                                             k
                                          
                                       
                                       φ
                                       (
                                       
                                          
                                             2
                                          
                                          j
                                       
                                       x
                                       −
                                       k
                                       )
                                    
                                 
                              
                           
                        
                        
                           
                              (18)
                              
                                 
                                    
                                       g
                                    
                                    
                                       j
                                    
                                 
                                 (
                                 x
                                 )
                                 =
                                 
                                    
                                       ∑
                                       k
                                    
                                    
                                       
                                          
                                             d
                                          
                                          
                                             j
                                             ,
                                             k
                                          
                                       
                                       ψ
                                       (
                                       
                                          
                                             2
                                          
                                          j
                                       
                                       x
                                       −
                                       k
                                       )
                                    
                                 
                              
                           
                        we can obtain the relations between the two scales by these properties.
                           
                              (19)
                              
                                 φ
                                 (
                                 x
                                 )
                                 =
                                 
                                    
                                       ∑
                                       k
                                    
                                    
                                       
                                          
                                             p
                                          
                                          
                                             k
                                          
                                       
                                       φ
                                       (
                                       2
                                       x
                                       −
                                       k
                                       )
                                    
                                 
                              
                           
                        
                        
                           
                              (20)
                              
                                 ψ
                                 (
                                 x
                                 )
                                 =
                                 
                                    
                                       ∑
                                       k
                                    
                                    
                                       
                                          
                                             q
                                          
                                          
                                             k
                                          
                                       
                                       φ
                                       (
                                       2
                                       x
                                       −
                                       k
                                       )
                                    
                                 
                              
                           
                        in Eqs. (19) and (20), {p
                        
                           k
                        } and {q
                        
                           k
                        } are the reconstructing sequence. Moreover, two unique decomposition sequences {a
                        
                           k
                        } and {b
                        
                           k
                        } constitute the scale function and wavelet function decomposition relationship [44]
                        
                           
                              (21)
                              
                                 φ
                                 (
                                 2
                                 x
                                 −
                                 l
                                 )
                                 =
                                 
                                    
                                       ∑
                                       k
                                    
                                    
                                       [
                                       
                                          
                                             a
                                          
                                          
                                             l
                                             −
                                             2
                                             k
                                          
                                       
                                       φ
                                       (
                                       x
                                       −
                                       k
                                       )
                                       +
                                       
                                          
                                             b
                                          
                                          
                                             l
                                             −
                                             2
                                             k
                                          
                                       
                                       ψ
                                       (
                                       x
                                       −
                                       k
                                       )
                                       ]
                                    
                                 
                              
                           
                        combining Eqs. (6) and (16), we can obtain the corresponding decomposition and reconstruction process. For its decomposition expression
                           
                              (22)
                              
                                 {
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      c
                                                   
                                                   
                                                      j
                                                      −
                                                      1
                                                      ,
                                                      k
                                                   
                                                
                                                =
                                                
                                                   
                                                      ∑
                                                      l
                                                   
                                                   
                                                      
                                                         
                                                            a
                                                         
                                                         
                                                            l
                                                            −
                                                            2
                                                            k
                                                         
                                                      
                                                      
                                                         
                                                            c
                                                         
                                                         
                                                            j
                                                            ,
                                                            l
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      d
                                                   
                                                   
                                                      j
                                                      −
                                                      1
                                                      ,
                                                      k
                                                   
                                                
                                                =
                                                
                                                   
                                                      ∑
                                                      l
                                                   
                                                   
                                                      
                                                         
                                                            b
                                                         
                                                         
                                                            l
                                                            −
                                                            2
                                                            k
                                                         
                                                      
                                                      
                                                         
                                                            c
                                                         
                                                         
                                                            j
                                                            ,
                                                            l
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              
                                 c
                              
                              
                                 J
                              
                           
                         is the 
                           {
                           
                              
                                 c
                              
                              
                                 j
                                 ,
                                 k
                              
                           
                           }
                         and 
                           
                              
                                 d
                              
                              
                                 J
                              
                           
                         is the 
                           {
                           
                              
                                 d
                              
                              
                                 j
                                 ,
                                 k
                              
                           
                           }
                        . The decomposition process is shown in 
                        Fig. 1.

The construction expression is
                           
                              (23)
                              
                                 
                                    
                                       c
                                    
                                    
                                       j
                                       ,
                                       k
                                    
                                 
                                 =
                                 
                                    
                                       ∑
                                       l
                                    
                                    
                                       [
                                       
                                          
                                             p
                                          
                                          
                                             k
                                             −
                                             2
                                             l
                                          
                                       
                                       
                                          
                                             c
                                          
                                          
                                             j
                                             −
                                             1
                                             ,
                                             l
                                          
                                       
                                       +
                                       
                                          
                                             q
                                          
                                          
                                             k
                                             −
                                             2
                                             l
                                          
                                       
                                       
                                          
                                             d
                                          
                                          
                                             j
                                             −
                                             1
                                             ,
                                             l
                                          
                                       
                                       ]
                                    
                                 
                              
                           
                        similarly, the reconstruction process can be represented in 
                        Fig. 2. The characteristic of multi-resolution analysis provides another way of improving analysis precision other than conventional h-version, or p-version finite element methods. It does not change the grid subdivision and brings greater numerical stability. These characteristics have a promising potential in the field of numerical analysis.

Prior to development of the finite element method, weighted residual method was a powerful approximation technique for solving differential equations. It has three main steps. The first is to construct approximate form of unknown function or objective solution. The second is to select proper weighting based on the analyzed problems. The last is to make residuals zero in the corresponding domain. The basic theory of weighted residual method is briefly described as follows.

Many problems in engineering and physics are posed by appropriate differential equations and boundary conditions to be imposed on the unknown function or functions. The unknown functions 
                        f
                      satisfy a certain differential equation set
                        
                           (24)
                           
                              A
                              (
                              f
                              )
                              =
                              
                                 {
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      A
                                                   
                                                   
                                                      1
                                                   
                                                
                                                (
                                                f
                                                )
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      A
                                                   
                                                   
                                                      2
                                                   
                                                
                                                (
                                                f
                                                )
                                             
                                          
                                       
                                       
                                          
                                             ⋮
                                          
                                       
                                    
                                 
                                 }
                              
                              =
                              0
                           
                        
                     in a ‘domain’ (volume, area, etc.), Ω, together with certain boundary conditions
                        
                           (25)
                           
                              B
                              (
                              f
                              )
                              =
                              
                                 {
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      B
                                                   
                                                   
                                                      1
                                                   
                                                
                                                (
                                                f
                                                )
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      B
                                                   
                                                   
                                                      2
                                                   
                                                
                                                (
                                                f
                                                )
                                             
                                          
                                       
                                       
                                          
                                             ⋮
                                          
                                       
                                    
                                 
                                 }
                              
                              =
                              0
                           
                        
                     on the boundaries Γ of the domain Ω.

When the sets of differential Eq. (24) and boundary conditions Eq. (25) are simultaneously satisfied, we can obtain
                        
                           (26)
                           
                              
                                 ∫
                                 Ω
                              
                              
                                 
                                    
                                       v
                                    
                                    T
                                 
                              
                              A
                              (
                              f
                              )
                              d
                              Ω
                              +
                              
                                 
                                    
                                       ∫
                                       Γ
                                    
                                    
                                       v
                                       ¯
                                    
                                 
                                 T
                              
                              B
                              (
                              f
                              )
                              d
                              Γ
                              =
                              0
                           
                        
                     for any set of arbitrary functions 
                        v
                      and 
                        
                           v
                           ¯
                        
                     .

The satisfaction of Eq. (26) means that the differential Eq. (24) and the boundary conditions Eq. (25) are satisfied. Eq. (26) is called the equivalent integral form of differential equations with boundary conditions.

In Eq. (26), the unknown functions 
                        u
                      can be represented by the approximate form
                        
                           (27)
                           
                              u
                              ≈
                              
                                 u
                                 ˜
                              
                              =
                              
                                 ∑
                                 
                                    i
                                    =
                                    1
                                 
                                 n
                              
                              
                                 
                                    
                                       N
                                    
                                    
                                       i
                                    
                                 
                              
                              
                                 
                                    a
                                 
                                 
                                    i
                                 
                              
                              =
                              Na
                           
                        
                     where 
                        
                           
                              N
                           
                           
                              i
                           
                        
                      are shape functions prescribed in terms of independent variables (such as coordinates x, y) and all or most of the parameters 
                        
                           
                              a
                           
                           
                              i
                           
                        
                      are unknown.

The integral statement Eq. (26) allows an approximation to be made. We put a finite set of approximate functions in the place of any function 
                        v
                      and 
                        
                           v
                           ¯
                        
                     , that is
                        
                           (28)
                           
                              
                                 ∫
                                 Ω
                              
                              
                                 
                                    
                                       w
                                    
                                    
                                       b
                                    
                                    
                                       T
                                    
                                 
                              
                              A
                              (
                              
                                 u
                                 ˜
                              
                              )
                              d
                              Ω
                              +
                              
                                 ∫
                                 Γ
                              
                              
                                 
                                    
                                       
                                          w
                                          ¯
                                       
                                    
                                    
                                       b
                                    
                                    
                                       T
                                    
                                 
                              
                              B
                              (
                              
                                 u
                                 ˜
                              
                              )
                              d
                              Γ
                              =
                              0
                              ;
                              
                              b
                              =
                              1
                              ,
                              2
                              ,
                              …
                              ,
                              n
                           
                        
                     where 
                        A
                        (
                        
                           u
                           ˜
                        
                        )
                      and 
                        B
                        (
                        
                           u
                           ˜
                        
                        )
                      are the residuals.

The values of 
                        A
                        (
                        
                           u
                           ˜
                        
                        )
                      and 
                        B
                        (
                        
                           u
                           ˜
                        
                        )
                      are determined by the approximate functions 
                        
                           u
                           ˜
                        
                      which are approximated by a series of shape functions or basis functions. So the construction of basis functions is important for weighted residual method. Wavelets have two advantages to approximate unknown function as basis functions [46]. One is that wavelets have the ability to represent functions at different levels of resolution and thus provide a logical means of developing a hierarchy of solutions. The other is that compactly supported wavelets are localized in space, which means that the solution can be refined in regions of high gradient. Based on these advantages, wavelet weighted residual method (WWRM) appeared for solving specific problems. In WWRM, the shape functions are taken from the family of wavelet functions or wavelet scaling functions in the solution domain. According to the choices of the weighting functions, there are two main WWRM sub-methods, i.e. wavelet Galerkin method (WGM) and wavelet collocation method (WCM).

The unknown functions 
                           u
                         could be approximately represented by a series of wavelet functions or wavelet scaling functions. If only the original shape functions are used as weighting, that is
                           
                              (29)
                              
                                 
                                    
                                       w
                                    
                                    
                                       b
                                    
                                 
                                 =
                                 
                                    
                                       N
                                    
                                    
                                       b
                                    
                                 
                                 ;
                                 
                                 
                                    
                                       
                                          w
                                          ¯
                                       
                                    
                                    
                                       b
                                    
                                 
                                 =
                                 −
                                 
                                    
                                       N
                                    
                                    
                                       b
                                    
                                 
                              
                           
                        this method is called wavelet Galerkin method. Then the integral form Eq. (28) turns into the following form
                           
                              (30)
                              
                                 
                                    ∫
                                    Ω
                                 
                                 
                                    
                                       
                                          N
                                       
                                       
                                          b
                                       
                                       
                                          T
                                       
                                    
                                 
                                 A
                                 (
                                 
                                    u
                                    ˜
                                 
                                 )
                                 d
                                 Ω
                                 −
                                 
                                    ∫
                                    Γ
                                 
                                 
                                    
                                       
                                          N
                                       
                                       
                                          b
                                       
                                       
                                          T
                                       
                                    
                                 
                                 B
                                 (
                                 
                                    u
                                    ˜
                                 
                                 )
                                 d
                                 Γ
                                 =
                                 0
                                 ;
                                 
                                 b
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 n
                              
                           
                        
                     

The Galerkin method consists of finding a functional basis for the solution space of the equation, then projecting the solution on the functional basis and minimizing the residual with respect to functional basis. The wavelet transformation forms an unconditional orthonormal bases of 
                           
                              
                                 L
                              
                              2
                           
                           (
                           R
                           )
                        , which is a great improvement over the standard polynomial basis or a trigonometric basis using the Galerkin method. Moreover, wavelet multiresolution analysis allows for localizing small scale variations of the solution and fast switching of functional bases [47].

Qian and Weiss presented wavelet Galerkin method using Daubechies wavelet scaling functions as weight functions. The Helmholtz equation of nonseparable domains was solved in their studies [48]. Then Amaratunga and Williams applied the wavelet Galerkin method to obtain numerical solution of two dimensional elliptic PDEs, especially for boundary value problems [49]. With the introduction of an ‘extensive wavelet-capacitance matrix technique’ which shows fast convergence at relatively coarse levels of discretization, their methods have been able to handle the boundary geometry effectively. Such ideas had been explored by many authors in the early 1990s. It should be noted that the methods were initially mainly used to solve the periodic PDEs, where the solution functions and right hand member of PDEs were periodic functions. Through wavelet Galerkin variation, the periodic solutions with convolution form can be obtained, and then the boundary conditions can be dealt by capacitance matrix methods [50,51]. Capacitance matrix algorithms are the methods for the solution of highly structured linear systems of algebraic equations which arise when the Helmholtz problem is discretized by a finite difference method. In applying wavelet capacitance matrix approach, it is difficult to impose boundary conditions due to the fact that current wavelet functions do not satisfy the Kronecker delta criterion and the constructed procedure of boundary wavelet is complex. In order to improve the capacitance matrix method, Lu and Ohyoshi et al. presented a different method in the wavelet Galerkin solution of wave equation which introduced periodic boundary condition by constructing endpoint additional equations [52]; Diaz and Yang et al. utilized Lagrange multiplier to introduce boundary condition [53]. Subsequently, WGMs have been widely used in solving various types of PDEs, such as elliptic, hyperbolic and parabolic PDEs in regular and irregular solving domains [54–58]. Dahmen [7] reviewed the recent developments of wavelet-based schemes for PDEs and proved the key features of multiscale wavelet bases, i.e., cancellation property and norm equivalences are essential for the numerical treatment of operator equations. However, the WGMs can only obtain wavelet coefficients. In order to solve nodal displacements, more and more additional calculations are inevitable. Park and Tsiotras [55,56], Alqassab and Nair [57,58] used anti-derivatives wavelets to be the weighted function. In this way, the control equations of Hamilton–Jacobi–Bellman and modal analysis of rope were solved with high computation accuracy. Monasse and Perrier [59], Nakagoshi and Noguchi [60], Kim and Jang [61] utilized interval interpolation wavelet to calculate the nodal displacements directly in Dirichlet and Neumann boundary problems.

The superiority of WGM has been proved in many engineering applications. Dahmen et al. solved the Navier–Stokes equation in the flow field analysis [62]. Yang et al. introduced WGM to the computations of electromagnetic fields [63]. Venini et al. [64] utilized adaptive WGM for an elastic–plastic-damage constitutive model. Aditya et al. carried adaptive multiscale solution in chemical processes using wavelets [65]. In addition, WGMs were also used in modeling the phase field of microstructural evolution of materials [66], refinery process simulation [67] and large deformation analysis [68].

The practical application of WGM is attributed to the advantages of wavelets that the multi-resolution and localization properties can be exploited. But wavelets also bring out two disadvantages [69]. One is that the WGM can only handle simple boundary conditions, e.g., fixed or simple support on all sides, but fails for many general boundary conditions, even homogeneous cases. The other is that the method will be complicated, as non-homogeneous boundary conditions are considered in two-dimensional cases. In summary, wavelet multiresolution expands the scope of Galerkin method. In view of this, adaptive wavelet Galerkin approach and general program coding will draw much attention of researchers in the future.

Collocation method is another useful weighted residual method in solving integral and differential equations. This method simply makes the residual zero at n points within the domain, that is, delta function is used as weighting as follows:
                           
                              (31)
                              
                                 
                                    
                                       w
                                    
                                    
                                       b
                                    
                                 
                                 =
                                 
                                    
                                       
                                          w
                                          ¯
                                       
                                    
                                    
                                       b
                                    
                                 
                                 =
                                 
                                    
                                       δ
                                    
                                    
                                       b
                                    
                                 
                                 ;
                                 
                                 b
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 n
                              
                           
                        when 
                           x
                           ≠
                           
                              
                                 x
                              
                              
                                 b
                              
                           
                        ; 
                           y
                           ≠
                           
                              
                                 y
                              
                              
                                 b
                              
                           
                        , 
                           w
                        
                        b=0,
                           
                              (32)
                              
                                 
                                    ∫
                                    Ω
                                 
                                 
                                    
                                       
                                          w
                                       
                                       
                                          b
                                       
                                    
                                    d
                                 
                                 Ω
                                 =
                                 1
                                 ;
                                 
                                 b
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 n
                              
                           
                        collocation method includes finding a functional basis for the solution space of the equation, then making the residual zero at n points within the domain.

Similar to WGM, wavelet collocation method (WCM) is one in which wavelet functions are used as shape functions. Bertoluzza and Masson [70] proposed a wavelet-collocation method for dealing with the boundary condition problems of chemical reactions. Taking advantage of the trail function from the collocation method, this method could handle the general nonlinearity quite easily [71]. Chiavassa and Liandrat studied collocation method with the bases of B-spline wavelets on the interval [72]; Mcwilliam and Knappett et al. employed Shannon wavelets in solving the stationary FPK equation [73]; Vasilyev et al. used second general wavelet collocation approach to compute the vibration equations and nonlinear PDE with irregular boundary conditions [74,75]. In the above studies, the adaptive criterions include grid reduction–grid extension [71], C-Structure [73] and lifting scheme [75]. It is shown that WCM is not completely established. In addition, this method is only used in applied mathematics without practical application [76,77].

In the comparative study of two wavelet-based methods, i.e. WGM and WCM, Vasilyev and Palolucci [78] indicated that their primary difference is that WGMs solve problems in wavelet coefficient space, while WCMs solve problems in physical space on a dynamically adaptive computational grid [79]. In WCMs, every wavelet is associated with a collocation point, and thus grid adaptation is simply based on the analysis of wavelet coefficients (see 
                        Fig. 3). Additionally, although generally the WGM gives a higher degree of accuracy than the collocation method, it is somewhat intractable for nonlinear problems. The main difficulty lies in the computing of the connection coefficients of stiffness matrix [80]. If the WGM is involved for solving the problem with general nonlinearity, it is hard to get a set of neat algebraic equations after the wavelet transformation. WCM can handle the general nonlinearity easily, taking advantages of the trail function. In summary, WCM is less accurate for solving linear problems than WGM, but it can deal with nonlinear problems easily.

Weighted residual algorithm is an old method in numerical analysis. However, the participation of wavelet revives it. Wavelet weighted residual method includes not only WGM and WCM but also wavelet Petrov–Galerkin Method [80,81] and Wavelet least-squares method [82]. Further optimization of the algorithm is being worked on. This is a recent technique that is the focus of study in the areas of mathematics, physics, engineering, etc.

Finite element method is a well-known numerical technique based on weighted residual method. There are two groups in FEM, namely, narrow FEM and generalized FEM in terms of approximate spaces being adopted. The narrow FEM uses the low order polynomials as approximation functions, while the generalized FEM employs many other trial functions. Usually, the development of FEM is closely related to the extension of approximation spaces. Wavelet finite element method (WFEM) is a vivid example of this development. Daubechies wavelet, spline wavelet, Hermite wavelet, polynomial wavelet, second-generation wavelet, etc. have been introduced to be the trial functions of FEM, which greatly enriches the wavelet elemental library and provides more choices for investigators in engineering structural analysis.

Since the basic work of Daubechies, wavelet and its applications have drawn great attention of researchers. 
                        
                        Figs. 4 and 5 show the Daubechies wavelet scaling function 
                           
                              
                                 φ
                              
                              
                                 N
                              
                           
                           (
                           x
                           )
                         and wavelet function 
                           
                              
                                 ψ
                              
                              
                                 N
                              
                           
                           (
                           x
                           )
                         with degree (vanishing moment) N=6. The two functions have the following properties [83].

A family of Daubechies wavelets is generated by scaling function 
                              
                                 
                                    φ
                                 
                                 
                                    N
                                 
                              
                              (
                              x
                              )
                            and wavelet function 
                              
                                 
                                    ψ
                                 
                                 
                                    N
                                 
                              
                              (
                              x
                              )
                           . Both of them have nonzero values over a small portion of the domain. 
                              D
                              N
                              j
                            denotes the Daubechies wavelet with order N in the resolution space j, the supports for 
                              
                                 
                                    φ
                                 
                                 
                                    N
                                 
                              
                              (
                              x
                              )
                            is given below:
                              
                                 (33)
                                 
                                    supp
                                    
                                    
                                       
                                          φ
                                       
                                       
                                          N
                                       
                                    
                                    =
                                    [
                                    0
                                    ,
                                    
                                    2
                                    N
                                    −
                                    1
                                    ]
                                    ,
                                 
                              
                           
                        

Since 
                              D
                              N
                              j
                            is orthogonal to polynomials up to N−1 order, the scaling function 
                              
                                 
                                    φ
                                 
                                 
                                    N
                                 
                              
                              (
                              x
                              )
                            has N−1 order of vanishing moments:
                              
                                 (34)
                                 
                                    
                                       ∫
                                       
                                          −
                                          ∞
                                       
                                       
                                          ∞
                                       
                                    
                                    
                                       
                                          
                                             x
                                          
                                          k
                                       
                                       
                                          
                                             φ
                                          
                                          
                                             N
                                          
                                       
                                       (
                                       x
                                       )
                                       d
                                       x
                                       =
                                       0
                                       
                                       ,
                                       
                                       k
                                       =
                                       0
                                       ,
                                       
                                       1
                                       ,
                                       …
                                       ,
                                       N
                                       −
                                       1
                                    
                                    ,
                                 
                              
                           
                        

The scaling function 
                              
                                 
                                    φ
                                 
                                 
                                    N
                                 
                              
                              (
                              x
                              )
                            of 
                              D
                              N
                              j
                            satisfies the following orthogonal conditions:
                              
                                 (35)
                                 
                                    
                                       ∫
                                       
                                          −
                                          ∞
                                       
                                       
                                          ∞
                                       
                                    
                                    
                                       
                                          
                                             φ
                                          
                                          
                                             N
                                          
                                       
                                       (
                                       x
                                       −
                                       j
                                       )
                                       
                                          
                                             φ
                                          
                                          
                                             N
                                          
                                       
                                       (
                                       x
                                       −
                                       m
                                       )
                                       d
                                       x
                                       =
                                       
                                          
                                             δ
                                          
                                          
                                             j
                                             ,
                                             m
                                          
                                       
                                    
                                    ,
                                 
                              
                           where 
                              
                                 
                                    δ
                                 
                                 
                                    j
                                    ,
                                    m
                                 
                              
                              =
                              
                                 {
                                 
                                    
                                       
                                          
                                             1
                                          
                                          
                                             
                                                j
                                                =
                                                m
                                             
                                          
                                       
                                       
                                          
                                             0
                                          
                                          
                                             
                                                j
                                                ≠
                                                m
                                             
                                          
                                       
                                    
                                 
                              
                           .

When scaling functions are employed as approximate functions in the procedure of construction of wavelet finite element, compact support property proves to be more effective in using minimum degrees of freedom over an element to approximate displacement functions. Moreover, sparseness of the matrix is a result of the scaling functions which have the compactly supported property. Cancellation property allows one to perfectly interpolate polynomials of degree up to N−1 by the scaling function with order N. The experiments gathered in the wavelet-Galerkin context indicate that orthogonal property satisfies the condition that the matrix is sparse as well as banded if the global nodes are numbered sequentially. Because of the above main properties, Daubechies wavelets can describe the details of the problem conveniently and accurately, and the corresponding Daubechies wavelets-based element has an enormous potential in the analysis of the singularity problem.

Ko and Kurdila et al. developed a finite element method based on Daubehies wavelet. An algebraic eigenvalue problem derived from the dyadic refinement equation can be solved by this method. The resulting finite elements could be viewed as generalizations of the connection coefficients employed in the Daubechies wavelet expansion of periodic differential operators [13]. Patton and Marks et al. utilized a Daubechies scaling function as interpolation function of one-dimensional finite element. The element can reduce the computation time and number of degrees of freedom needed to solve vibration and wave propagation problems [84]. Ma and Xue et al. constructed one-dimensional Daubechies wavelet beam element [85]. Chen and Yang et al. extended such elements to higher dimensions, constructed two-dimensional Daubechies wavelet element, derived the bending equations for the thin plate based on wavelet finite element, and solved the L shape plate stress problems. Their findings show that wavelet finite element has good ability to deal with singularity problems [86]. However, the tensor product space should be constructed firstly [87], which decreases the computational effectiveness. So Jin and Xue et al. built a two-dimensional Daubechies wavelet directly without tensor product calculation and developed corresponding two-dimensional plate element [88]. Nevertheless, the wavelet deflection formulation depends on specific boundary conditions and is effective only for homogeneous boundary conditions of square plates. In addition, only simple boundary conditions were considered in these works. Triggered by this motivation, a modified form of wavelet approximation of deflection solution was advised for bending problems of beams and square thin plates by Zhou et al. [89], in which boundary rotational degrees of freedom of beams and square plates were explicitly introduced as Daubechies wavelet coefficients. Then, based on the modified approximations, variation equations were established by utilizing variation principles, and both homogeneous and non-homogeneous boundary conditions can be treated in the same way as that used in conventional FEMs.

Mitra presented a Daubechies wavelet-based spectral finite element method (WSFEM) for studying elastic wave propagation in one dimensional and two dimensional connected waveguides [90–92]. The method first converts the partial differential wave equation to ordinary differential equations (ODEs) using Daubechies wavelet approximation in time domain. Then these ODEs are solved using FEM by deriving the exact interpolating function in the transformed domain. Spectral element can capture the exact mass distribution and thus the system size required is very much smaller than that of the conventional FEM. Besides, due to the localized nature of Daubechies wavelet basis functions, the WSFEM proves to be more efficient as it removes the wrap around problem associated with spectral finite element method for time domain analysis. Mitra and Gopalakrishnan [93] later extended the method to analyze composite beam with embedded de-lamination. However, the real-scale structural wave propagation problem requires more different complex spectral elements, interconnections and flexible inflatable components. Future research work will focus on extending the spectral element method to damaged structures with more complex geometry.

In summary, Daubechies wavelets are used to approximate the displacement and force in the domain, where unknown wavelet coefficients can be determined through imposing the essential boundary condition. The Daubechies wavelet finite elements embodies the properties of locality and adaptivity. However, because Daubechies wavelets lack the explicit function expression, traditional numerical integrals such as Gaussian integrals cannot provide desirable precision. Consequently, the applications of Daubechies wavelets are limited by the aforementioned weakness.

The B-spline in a given simple knot sequence can be constructed by employing piecewise polynomials between the knots and joining them together at the knots. In this way, the overall smooth B-splines in C
                        
                           m−2 will be obtained if the order is assigned to m. By means of a simple linear mapping ξ=(x−a)/(b−a), any one dimensional function f(x) on the interval [a, b] can be transferred to the interval [0, 1]. Thus, it only needs to construct the mth order B-spline function on the interval [0, 1]. An interval wavelet, on the interval [0, 1] was given by Goswami, Chan and Chui [94]. Since there should be at least one inner wavelet on the interval [0, 1], the following condition must be satisfied:
                           
                              (36)
                              
                                 
                                    
                                       2
                                    
                                    j
                                 
                                 ≥
                                 2
                                 m
                                 −
                                 1
                              
                           
                        where j is the scale number of B-spline wavelet on interval (BSWI). According to the 0 scale mth order B-spline functions and the corresponding wavelets given by Goswami, the j scale mth order BSWI, simply denoted as BSWIm
                        
                           j
                        , scaling functions 
                           
                              
                                 ϕ
                              
                              
                                 m
                                 ,
                                 k
                              
                              
                                 j
                              
                           
                           (
                           ξ
                           )
                         are derived by the following formulas:
                           
                              (37)
                              
                                 
                                    
                                       ϕ
                                    
                                    
                                       m
                                       ,
                                       k
                                    
                                    
                                       j
                                    
                                 
                                 (
                                 ξ
                                 )
                                 =
                                 
                                    {
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         ϕ
                                                      
                                                      
                                                         m
                                                         ,
                                                         k
                                                      
                                                      
                                                         l
                                                      
                                                   
                                                   (
                                                   
                                                      
                                                         2
                                                      
                                                      
                                                         j
                                                         −
                                                         l
                                                      
                                                   
                                                   ξ
                                                   )
                                                   ,
                                                   k
                                                   =
                                                   −
                                                   m
                                                   +
                                                   1
                                                   ,
                                                   ..
                                                   .
                                                   ,
                                                   −
                                                   1
                                                
                                             
                                             
                                                
                                                   (
                                                   0
                                                   
                                                   boundary
                                                   
                                                   scaling
                                                   
                                                   functions
                                                   )
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         ϕ
                                                      
                                                      
                                                         m
                                                         ,
                                                         
                                                            
                                                               2
                                                            
                                                            j
                                                         
                                                         −
                                                         m
                                                         −
                                                         k
                                                      
                                                      
                                                         l
                                                      
                                                   
                                                   (
                                                   1
                                                   −
                                                   
                                                      
                                                         2
                                                      
                                                      
                                                         j
                                                         −
                                                         l
                                                      
                                                   
                                                   ξ
                                                   )
                                                   ,
                                                   k
                                                   =
                                                   
                                                      
                                                         2
                                                      
                                                      j
                                                   
                                                   −
                                                   m
                                                   +
                                                   1
                                                   ,
                                                   ..
                                                   .
                                                   ,
                                                   
                                                      
                                                         2
                                                      
                                                      j
                                                   
                                                   −
                                                   1
                                                
                                             
                                             
                                                
                                                   (
                                                   1
                                                   
                                                   boundary
                                                   
                                                   scaling
                                                   
                                                   functions
                                                   )
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         ϕ
                                                      
                                                      
                                                         m
                                                         ,
                                                         0
                                                      
                                                      
                                                         l
                                                      
                                                   
                                                   (
                                                   
                                                      
                                                         2
                                                      
                                                      
                                                         j
                                                         −
                                                         l
                                                      
                                                   
                                                   ξ
                                                   −
                                                   
                                                      
                                                         2
                                                      
                                                      
                                                         −
                                                         l
                                                      
                                                   
                                                   k
                                                   )
                                                   ,
                                                   k
                                                   =
                                                   0
                                                   ,
                                                   ..
                                                   .
                                                   ,
                                                   
                                                      
                                                         2
                                                      
                                                      j
                                                   
                                                   −
                                                   m
                                                
                                             
                                             
                                                
                                                   (
                                                   inner
                                                   
                                                   scaling
                                                   
                                                   functions
                                                   )
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        therefore, the scaling functions on the interval [0, 1] can be written in the vector form:
                           
                              (38)
                              
                                 Φ
                                 =
                                 {
                                 
                                    
                                       ϕ
                                    
                                    
                                       m
                                       ,
                                       −
                                       m
                                       +
                                       1
                                    
                                    
                                       j
                                    
                                 
                                 (
                                 ξ
                                 )
                                 
                                 
                                    
                                       ϕ
                                    
                                    
                                       m
                                       ,
                                       −
                                       m
                                       +
                                       2
                                    
                                    
                                       j
                                    
                                 
                                 (
                                 ξ
                                 )
                                 …
                                 
                                    
                                       ϕ
                                    
                                    
                                       m
                                       ,
                                       
                                          
                                             2
                                          
                                          j
                                       
                                       −
                                       1
                                    
                                    
                                       j
                                    
                                 
                                 (
                                 ξ
                                 )
                                 }
                              
                           
                        where ξ belongs to the interval [0, 1]. Kronecker product, which is also called tensor product, is an easy way to construct two dimensional from the one dimensional ones. The new two dimensional scaling or approximation space 
                           F
                        
                        
                           j
                         is constructed by the Kronecker product of one dimensional approximation spaces 
                           
                              
                                 V
                              
                              
                                 j
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 V
                              
                              
                                 j
                              
                              
                                 2
                              
                           
                        (
                           
                              
                                 F
                              
                              
                                 j
                              
                           
                           =
                           
                              
                                 V
                              
                              
                                 j
                              
                              
                                 1
                              
                           
                           ⊗
                           
                              
                                 V
                              
                              
                                 j
                              
                              
                                 2
                              
                           
                        ), and the new basement is 
                           Φ
                           =
                           
                              
                                 Φ
                              
                              
                                 1
                              
                           
                           ⊗
                           
                              
                                 Φ
                              
                              
                                 2
                              
                           
                        , where subscripts 1 and 2 are used to distinguish the different variations in scaling functions as given in Eq. (38). The one dimensional and two dimensional spline scaling functions as the shape function for curved shell element is presented in 
                        Fig. 6.

Compared with commonly used Daubechies wavelets, BSWI has explicit expressions, facilitating the calculation of coefficient integration and differentiation. The multiresolution and localization properties of BSWI can also supply some superiority for engineering structural analysis. The early application of spline can be found in Refs. [95–97], for instance, Antes employed a bicubic fundamental splines to analyze the plate bending problem. Subsequently, a series of typical spline wavelet elements such as plane beam element, in-plane triangular element, in-plane rectangular element, tetrahedral solid element, and hexahedral solid element were formulated by Han et al. Via the B-spline wavelet on the interval wavelet to solve structural analysis problems [98–100]. Unlike the process of direct wavelet adding in the previous work, the elemental displacement field represented by the coefficients of wavelets expansions is transformed into edges and internal modes via the constructed transformation matrix [101]. The method combines the versatility of the conventional finite element method (FEM) with the accuracy of B-spline functions approximation and various basis functions for structural analysis [102]. Furthermore, using the accuracy and efficiency of wavelet FEM, some structural health monitoring methods were developed by Xiang et al. [103–108] and Dong et al. [109]. In Ref. [110] Chen and Yang et al. investigated the wave motion analysis of short wave in one dimensional structures.

There are also several extended spline-based WFEM for structural analysis. Han and Ren et al. presented a multivariable wavelet-based finite element formulation to resolve the bending problems of thick plates, which is based on the Hellinger–Reissner generalized variational principle with two kinds of independent variables [111]. Zhang and Chen et al. proposed BSWI finite element based on generalized variational principle and constructed multivariable wavelet finite element with two kinds of variables based on BSWI for shallow shells, illustrating the advantages of numerical methods in static and dynamic analysis of thin plate and thin plate on elastic foundation [112]. The results demonstrate that multivariable BSWI finite element is feasible and effective in static and dynamic analysis. These methods can interpolate moment and strain field functions separately in generalized potential energy functional which can avoid differentiation and improve the precision of moment and strain. Han and Ren et al. presented another wavelet-based stochastic finite element method by using the spline wavelets [113]. The method can deal with the problem response variability resulting from the spatial variability of the material properties when it is subjected to static loads of uncertain nature.

In order to solve the famous locking problem in Timoshenko beam, Mindlin plate and thick shells, the hybrid-mixed stress method is proposed [114–116], which could expand Hu–Washizu variation based element to thin plate analysis as shown in 
                        Fig. 7. In the hybrid-mixed stress model, both the stress and the displacement fields are simultaneously and independently approximated in the domain of each element. After reducing the freedoms of stress in the model, the corresponding form of hybrid finite element is accomplished. The family of wavelet is large with plenty of wavelets fit for finite element method, so the hybrid wavelet finite element is available and promising.

In general, based on the transformation matrix constructed, a class of spline wavelet finite element methods was proposed with the use of compactly supported semi-orthogonal B-spline wavelet. The numerical examples testified their good performance and some advantages of the above-mentioned elements in engineering structural analysis were discussed, i.e. higher efficiency and precision than traditional finite element methods, especially for the computation of generalized stresses. By virtue of the good characteristics of spline wavelet scaling functions and spline, such as multi-resolution analysis and localization, it is verified that spline wavelet FEM is a useful tool to deal with high performance computation in structural analysis.

The wavelet-based numerical methods embody two prominent advantages. One is directly upgraded scale by using the so-called two-scale equations, namely, the scaling functions at different scale are employed directly to form the multi-scale approximation bases. The other is nesting approximation using the lifting relationship between scale and wavelet spaces, i.e. the scaling functions and wavelets at certain scale are adopted to form the scaling functions at the next scale. However, the existent whole domain discretization methods, such as wavelet Galerkin method, commonly use the wavelets defined on the whole square integrable real space 
                           
                              
                                 L
                              
                              2
                           
                           (
                           R
                           )
                        . To deal with the boundary conditions on a bounded interval, the wavelets have to be truncated, which is a difficult task. Moreover, sometimes numerical instability phenomenon will occur when this kind of wavelets is applied to numerical simulation of PDEs.

Hermite cubic spline wavelet on the interval (HCSWI) [117] might be a good choice to generate multi-scale wavelet numerical simulation scheme. All the scaling functions 
                           
                              
                                 φ
                              
                              
                                 1
                                 ,
                                 k
                              
                           
                           (
                           x
                           )
                         in scale space V
                        1 and wavelets 
                           
                              
                                 ψ
                              
                              
                                 1
                                 ,
                                 k
                              
                           
                         in wavelet space W
                        1 on the interval [0, 1] are shown in 
                        Fig. 8.

The special properties of wavelet bases of HCSWI are: 
                           〈
                           
                              
                                 φ
                              
                              
                                 1
                                 ,
                                 k
                              
                              
                                 ′
                              
                           
                           ,
                           
                              
                                 ψ
                              
                              
                                 j
                                 ,
                                 k
                              
                              
                                 ′
                              
                           
                           〉
                           =
                           
                              ∫
                              0
                              1
                           
                           
                              
                                 
                                    φ
                                 
                                 
                                    1
                                    ,
                                    k
                                 
                                 
                                    ′
                                 
                              
                              
                                 
                                    ψ
                                 
                                 
                                    j
                                    ,
                                    k
                                 
                                 
                                    ′
                                 
                              
                           
                           d
                           x
                           =
                           0
                         for all j and k, and 
                           〈
                           
                              
                                 ψ
                              
                              
                                 
                                    
                                       j
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 k
                              
                              
                                 ′
                              
                           
                           ,
                           
                              
                                 ψ
                              
                              
                                 
                                    
                                       j
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 k
                              
                              
                                 ′
                              
                           
                           〉
                           =
                           
                              ∫
                              0
                              1
                           
                           
                              
                                 
                                    ψ
                                 
                                 
                                    
                                       
                                          j
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    k
                                 
                                 
                                    ′
                                 
                              
                              
                                 
                                    ψ
                                 
                                 
                                    
                                       
                                          j
                                       
                                       
                                          2
                                       
                                    
                                    ,
                                    k
                                 
                                 
                                    ′
                                 
                              
                           
                           d
                           x
                           =
                           0
                         for 
                           
                              
                                 j
                              
                              
                                 1
                              
                           
                           ≠
                           
                              
                                 j
                              
                              
                                 2
                              
                           
                         and all k. It indicates that the orthogonal characteristic of the wavelet bases with respect to the given inner product, the corresponding multi-scale equations will be decoupled across scales partially and HCSWI will suit for nesting approximation using lifting scheme.

Recently, some findings were published in the field of structural analysis. Xiang and Chen et al. presented a new multi-scale wavelet numerical method for solving one dimensional and two dimensional Poisson equations [118]. The wavelet bases of Hermite cubic splines on the interval are employed as the multi-scale interpolating basis for numerical analysis. The lifting scheme using multi-scale wavelet-based algebraic equations is diagonal sub-block matrix for one dimensional Poisson equation or enormously sparse representation for two dimensional Poisson equation. Therefore, this efficient strategy is a useful tool to deal with high gradient problems in passion equation or other PDEs in engineering. Xiang and Long et al. extended the HCSWI wavelet-based numerical method to analyze the dynamic characteristics of rotating shaft based on Rayleigh–Timoshenko beam theory [119]. Their research verifies the performance of wavelet numerical method using Hermitian cubic spline wavelets on the interval to solve whirl speeds. Chen and Xiang further adopted a hybrid approach of HCSWI wavelet-based numerical method and finite difference method to solve singularly perturbed convection-dominated diffusion equation [120]. To improve the accuracy of singular areas, they configured the wavelets hierarchically in spatial domain for solving algebraic equations. They also addressed the advantages of multi-resolution sparse approximation and explicit expressions of HCSWI. Xiang and Liang constructed HCSWI wavelet-based beam element and further employed this element to calculate the frequency-based database to detect multiple damages in beam-like structures [121]. Xiang and Wang et al. proposed a novel HCSWI wavelet-based method to solve stress intensity factors (SIFs) of plate structures [122]. They also claimed two main advantages: one is the improved computation efficiency compared with the traditional finite element method, the other is the so-called multiresolutions of wavelets and the special properties of wavelet bases of HCSWI which make it possible to generate an effective multi-scale approximation equation for the singularity problems.

However, in the above application of HCSWI wavelet-based numerical method, except for the homogeneous boundary condition, we have to truncate the HCSWI scaling functions and wavelets and deal with the compulsive boundary condition using Lagrange multiplier, which is similar to the traditional FEM [123]. This is also one of the drawbacks of the HCSWI wavelet-based numerical method due to its brokenness of the complete characteristic of HCSWI scaling functions and wavelets on each level.

Manuel and Castro [124] adopted the polynomial wavelets as the interpolating function to formulate the approximation for numerical problems. 
                        Fig. 9 presents the one dimensional polynomial wavelets. The orthogonal polynomial wavelet systems are based on the definition of linear combinations of Legendre polynomials and were introduced by Frolich and Uhlmann [125]. The roots of the Chebyshev polynomials of the second kind are used to obtain the corresponding expansion coefficients. Similar to the spline, a two dimensional wavelet can be easily obtained via tensor products involving one dimensional bases in each coordinate direction.

The hybrid-mixed formulations are the most flexible because they are not required to locally satisfy any of the elastodynamic conditions. Freitas [126] implemented the hybrid-mixed formulation on Walsh and Wavelet approximation bases designed to exploit the digital architecture of the computer. Castro and Barbosa [127] employed the wavelets defined on the interval as approximation functions in hybrid-mixed stress finite element models to solve the linear elastic plate stretching and bending problems. They investigated the algorithms and techniques involved in the generation and manipulation of such functions.

In Refs. [128,129] Mario and Castro pointed out that wavelet systems are expected to be used in the generalized models to make the static and dynamic analysis of physically and geometrically non-linear structures. It can be seen that the wavelet stress hybrid-mixed numerical method would be of greater significance in the next decade.

As a general numerical method, the WFEM adopts scaling and wavelet functions instead of traditional polynomial interpolation. Since the traditional wavelets are constructed from scaled and shifted versions of a single mother wavelet on a regularly spaced grid over a theoretically infinite or periodic domain, the traditional wavelets cannot be constructed on complicated, irregularly spaced meshes, which are commonly encountered in the finite element method. The second-generation wavelets (SGWs) based on a lifting scheme [130] were introduced to eliminate the restrictions and deficiencies of the traditional wavelets. The lifting scheme provides users with much flexibility for building different SGW bases with prediction and update coefficients for engineering problems. 
                        Fig. 10 shows the SGW scaling function and wavelet function with the predictor order N=4 and the updater order N=4 [130].

A typical case of SGW transform built through the lifting scheme consists of three basic steps: split, predict and update [131], as shown in 
                        Fig. 11.
                           
                              
                                 Split: 
                                    
                                       
                                          u
                                       
                                       
                                          j
                                          +
                                          1
                                       
                                    
                                  is divided into even subset 
                                    
                                       
                                          u
                                       
                                       
                                          e
                                       
                                       
                                          j
                                       
                                    
                                  and odd subset 
                                    
                                       
                                          u
                                       
                                       
                                          0
                                       
                                       
                                          j
                                       
                                    
                                 . Each group contains half as many samples as the original signal.


                                 Predict: If the original signal has a local correlation structure, then the even and odd subsets are highly correlated. The odd samples can be predicted from the neighboring even samples.


                                 Update: It forms a coarse approximation to the original signal. By combining the even coefficients with the linear combination of the prediction differences, the inverse scheme can be immediately built by reversing the order of the operations and flipping the signs.

Wang and Chen et al. established a general framework for constructing an adaptive multiresolution finite element method based on SGWs [132], and proposed a new adaptive inverse iteration algorithm using interpolating multiwavelets to solve structural eigenvalue problems [133]. He and Chen et al. designed appropriate finite element interpolation functions using interpolating wavelet on the interval and lifting scheme, and performed a multiresolution analysis for finite element method [134,135]. The method can calculate the local flexibility due to the crack in a pipe. Numerical and experimental results demonstrate the validity of the proposed method [136]. Quraishi and Sandeep developed a SGW based finite element method for solving elliptic PDEs on two dimensional triangulations using customized operator dependent wavelets [137]. Sudarshan and Amaratunge described the construction of second-generation finite element multiwavelets of the Hermite family, and gave expressions for the fast wavelet transform for these bases [138].

The advantage of SGWs over the traditional wavelets is the flexible construction by selecting appropriate prediction and update coefficients according to the problems analyzed. According to the two-scale equations and normalization conditions of the SGWs, the connection coefficients on the interval are computed accurately based on the equivalent filters. The SGWs can be customized by designed appropriate prediction and updated operators, which can make the finite element equation scale-decoupled. The coarse solution can be obtained in the coarse approximation space and refined by adding details. It can be resolved in the corresponding detail spaces independently over several levels till the equation is resolved to the desired accuracy. The proposed method establishes an important connection between finite element analysis and multiresolution analysis. The numerical examples show that the proposed method is powerful in analyzing the field problems with changes in gradients and singularities. Extensions of the algorithm to higher dimensions, complex geometries, and irregular sampling will be the subject of further investigation. The superior feature of interpolating multiwavelets is the operator-orthogonality in the multilevel eigenvalue computation, which permits the incremental computation of eigenvalue solution and reduces the computational complexity.

Compared to WRM and FEM, boundary element method (BEM) is often more efficient for the reduction of problem dimension by higher accuracy, less computer time and storage. It enables the researchers to filter out unwanted information and further focus on the interested section of the domain [139]. However, BEM formulations typically give rise to fully populated matrices. This means that the storage requirements and computational time will tend to grow according to the square of the problem size. By contrast, finite element matrices are typically banded (elements are only locally connected) and the storage requirements for the system matrices typically grow quite linearly with the problem size. Therefore, compression techniques (e.g. multipole expansions, adaptive cross approximation or hierarchical matrices) can be used to ameliorate the BEM. Many researchers focus on the extension of the basic idea to the wavelet-based solutions for boundary integral equation of BEM so as to compress the fully populated matrices of BEM and accelerate the calculation speed. The main usage of multi-scale approximation prosperity of wavelet has been investigated [140,141].

Below is the technological process of wavelet BEM with the example of the Neumann boundary value problem.

Considering the Neumann problem in solving domain Ω with smooth boundary Г as Eq. (39) shows.
                        
                           (39)
                           
                              {
                              
                                 
                                    
                                       
                                          
                                             Δ
                                             u
                                             =
                                             0
                                          
                                       
                                       
                                          
                                             u
                                             ∈
                                             Ω
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   ∂
                                                   u
                                                
                                                
                                                   ∂
                                                   n
                                                
                                             
                                             =
                                             
                                                
                                                   u
                                                
                                                
                                                   n
                                                
                                             
                                          
                                       
                                       
                                          
                                             u
                                             ∈
                                             Γ
                                          
                                       
                                    
                                 
                              
                           
                        
                     where 
                        ∂
                        u
                        /
                        ∂
                        n
                      denotes the exterior normal derivative, 
                        
                           
                              u
                           
                           
                              n
                           
                        
                        ∈
                        
                           
                              H
                           
                           
                              1
                              /
                              2
                           
                        
                        (
                        Γ
                        )
                      is the giving function.

In order to guarantee the Neumann problem has solutions, u
                     n should satisfy the consistency condition.
                        
                           (40)
                           
                              
                                 ∫
                                 Γ
                              
                              
                                 
                                    
                                       u
                                    
                                    
                                       n
                                    
                                 
                                 d
                                 s
                              
                              =
                              0
                           
                        
                     
                  

The Green function can be expressed as
                        
                           (41)
                           
                              G
                              (
                              p
                              ,
                              
                                 
                                    p
                                 
                                 '
                              
                              )
                              =
                              −
                              
                                 1
                                 
                                    4
                                    π
                                 
                              
                              
                              ln
                              
                              
                                 
                                    (
                                    x
                                    −
                                    x
                                    '
                                    )
                                    +
                                    (
                                    y
                                    +
                                    y
                                    '
                                    )
                                 
                                 
                                    (
                                    x
                                    −
                                    x
                                    '
                                    )
                                    +
                                    (
                                    y
                                    −
                                    y
                                    '
                                    )
                                 
                              
                           
                        
                     
                  

The natural boundary integral equation is
                        
                           (42)
                           
                              
                                 
                                    u
                                 
                                 
                                    n
                                 
                              
                              (
                              x
                              )
                              =
                              −
                              
                                 1
                                 
                                    π
                                    
                                       
                                          x
                                       
                                       2
                                    
                                 
                              
                              ⁎
                              
                                 
                                    u
                                 
                                 
                                    0
                                 
                              
                              (
                              x
                              )
                           
                        
                     and the Poisson function is
                        
                           (43)
                           
                              u
                              (
                              x
                              ,
                              y
                              )
                              =
                              
                                 y
                                 
                                    (
                                    
                                       
                                          x
                                       
                                       2
                                    
                                    +
                                    
                                       
                                          y
                                       
                                       2
                                    
                                    )
                                 
                              
                              ⁎
                              
                                 
                                    u
                                 
                                 
                                    0
                                 
                              
                              (
                              x
                              )
                              
                              y
                              >
                              0
                           
                        
                     where * denotes convolution. The integral kernel is a strongly singular integral kernel, which can be seen as the finite-partial integration of the Hadamard.

The bilinear model is
                        
                           (44)
                           
                              
                                 D
                                 ˜
                              
                              (
                              
                                 
                                    u
                                 
                                 
                                    0
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    0
                                 
                              
                              )
                              =
                              −
                              
                                 ∬
                                 
                                    
                                       
                                          R
                                       
                                       2
                                    
                                 
                              
                              
                                 
                                    
                                       
                                          
                                             v
                                          
                                          
                                             0
                                          
                                       
                                       (
                                       x
                                       )
                                       
                                          
                                             u
                                          
                                          
                                             0
                                          
                                       
                                       (
                                       y
                                       )
                                    
                                    
                                       π
                                       
                                          
                                             (
                                             x
                                             −
                                             y
                                             )
                                          
                                          2
                                       
                                    
                                 
                                 d
                                 x
                                 d
                                 y
                              
                           
                        
                     
                  

The linear functional is:
                        
                           (45)
                           
                              
                                 F
                                 ˜
                              
                              (
                              
                                 
                                    v
                                 
                                 
                                    0
                                 
                              
                              (
                              x
                              )
                              )
                              =
                              
                                 ∫
                                 R
                              
                              
                                 
                                    
                                       v
                                    
                                    
                                       0
                                    
                                 
                                 (
                                 x
                                 )
                                 
                                    
                                       u
                                    
                                    
                                       n
                                    
                                 
                                 (
                                 x
                                 )
                                 d
                                 x
                              
                           
                        
                     
                  

Therefore, the Neumann problem in Eq. (39) can expressed as follows:
                        
                           (46)
                           
                              
                                 D
                                 ˜
                              
                              ∈
                              (
                              
                                 
                                    u
                                 
                                 
                                    0
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    0
                                 
                              
                              )
                              =
                              
                                 F
                                 ˜
                              
                              (
                              
                                 
                                    v
                                 
                                 
                                    0
                                 
                              
                              )
                           
                        
                     taking the approximate value of u
                     0 as u
                     h(x).
                        
                           (47)
                           
                              
                                 
                                    u
                                 
                                 
                                    0
                                 
                              
                              (
                              x
                              )
                              ≈
                              
                                 
                                    u
                                 
                                 h
                              
                              (
                              x
                              )
                              =
                              
                                 ∑
                                 
                                    k
                                    =
                                    −
                                    M
                                 
                                 M
                              
                              
                                 
                                    
                                       u
                                    
                                    h
                                 
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       k
                                    
                                 
                                 )
                                 
                                    
                                       φ
                                    
                                    
                                       k
                                    
                                 
                                 (
                                 x
                                 )
                              
                           
                        
                     where 
                        
                           
                              φ
                           
                           
                              k
                           
                        
                        (
                        x
                        )
                      is the wavelet function.

Taking Eq. (47) into Eq. (46), the discrete solving function can be obtained.
                        
                           (48)
                           
                              
                                 ∑
                                 
                                    k
                                    =
                                    −
                                    M
                                 
                                 M
                              
                              
                                 
                                    
                                       u
                                    
                                    h
                                 
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       k
                                    
                                 
                                 )
                                 
                                    D
                                    ˜
                                 
                                 (
                                 
                                    
                                       φ
                                    
                                    
                                       k
                                    
                                 
                                 ,
                                 
                                    
                                       φ
                                    
                                    
                                       l
                                    
                                 
                                 )
                                 =
                                 
                                    F
                                    ˜
                                 
                                 (
                                 
                                    
                                       φ
                                    
                                    
                                       l
                                    
                                 
                                 )
                              
                           
                        
                     where 
                        −
                        M
                        ≤
                        l
                        ≤
                        M
                     .

The corresponding matrix form is
                        
                           (49)
                           
                              AX
                              =
                              b
                           
                        
                     where
                        
                           
                              A
                              =
                              
                                 
                                    (
                                    
                                       D
                                       ˜
                                    
                                    (
                                    
                                       
                                          φ
                                       
                                       
                                          k
                                       
                                    
                                    ,
                                    
                                       
                                          φ
                                       
                                       
                                          l
                                       
                                    
                                    )
                                    )
                                 
                                 
                                    (
                                    2
                                    M
                                    +
                                    1
                                    )
                                    ×
                                    (
                                    2
                                    M
                                    =
                                    1
                                    )
                                 
                              
                              X
                              =
                              
                                 
                                    (
                                    
                                       
                                          
                                             u
                                          
                                          h
                                       
                                       
                                          −
                                          M
                                       
                                    
                                    ,
                                    
                                       
                                          
                                             u
                                          
                                          h
                                       
                                       
                                          −
                                          M
                                          +
                                          1
                                       
                                    
                                    ,
                                    ..
                                    .
                                    ,
                                    
                                       
                                          
                                             u
                                          
                                          h
                                       
                                       M
                                    
                                    )
                                 
                                 T
                              
                              b
                              =
                              
                                 
                                    (
                                    
                                       F
                                       ˜
                                    
                                    (
                                    
                                       
                                          φ
                                       
                                       
                                          −
                                          M
                                       
                                    
                                    )
                                    ,
                                    
                                       F
                                       ˜
                                    
                                    (
                                    
                                       
                                          φ
                                       
                                       
                                          −
                                          M
                                          +
                                          1
                                       
                                    
                                    )
                                    ,
                                    …
                                    ,
                                    
                                       F
                                       ˜
                                    
                                    (
                                    
                                       
                                          φ
                                       
                                       
                                          M
                                       
                                    
                                    )
                                    )
                                 
                                 T
                              
                           
                        
                     by solving matrix function in Eq. (49), the corresponding Neumann boundary value problem can be accomplished.

The solving process of the Neumann boundary value problem reveals that a key step of the BEM in solving engineering problems is the discretization of the boundary integral equation. This is due to the fact that the reliability of the boundary element approximation is directly related to the discrete boundary element model in which a proper mesh should be used to accurately represent the original problem both in its geometry and its state variables [142]. However, in a conventional boundary element analysis, mesh design depends solely on an analyst's experience and intuition. If an initial solution is rejected, then an entirely new set of data representing a new mesh must be prepared. Obviously the conventional boundary element analysis is a very costly and time-consuming process, and there is no guarantee that the final solution is sufficiently accurate.

Neumann boundary value problem is one of the simplest problems for BEM. Based on above procedure, Spasojevic and Schneider et al. proposed a wavelet BEM scheme to obtain sparse boundary element matrices arising from Laplace's equation with mixed boundary conditions using an orthogonal Haar wavelet [140]. Levin et al. further employed bi-orthogonal wavelet to construct even sparser matrices than the ones they obtained using the conventional Haar wavelet [141]. They also observed that the higher order of vanishing moments (determines the smoothness of wavelet bases) of a wavelet lead to a sparser BEM matrices.

Recently, different kinds of wavelet BEM scheme using different wavelets were proposed for compressing BEM equations to generate a fast BEM algorithm. Koro and Abe employed the non-orthogonal spline and the orthogonal Haar wavelet to construct an h-version hierarchical BEM for two dimensional Laplace equation, respectively [143,144]. In order to reduce memory consumption and save computation time, they truncated the wavelet approximation coefficients to form the spare BEM matrices. Harbrecht and Paiva et al. presented a bi-orthogonal wavelet approximation to solve an exterior Dirichlet boundary value problem for the hybrid approach of FEM and BEM [145]. In order to further accelerate the wavelet BEM, González and Cabaleiro provided a parallel iterative solver, which is similar to the commonly used parallel computation of the traditional BEM [146]. Tausch extended p-version wavelet BEM to solve stokes flow using quasi-vanishing moment wavelet [147]. Koro and Abe proposed a practical determination strategy of optimal threshold parameter to discard the wavelet approximation coefficients without affecting the accuracy [148]. Bucher and Wrobel et al. presented a fast approach for rapidly solving problems with multiple load cases using the BEM based on virtual assemble of the separately compressed BEM matrices [149]. Eppler and Harbrecht et al. extended the bi-orthogonal wavelet BEM to the shape optimization problems [150]. Following Bucher's work [149], Buchera and Wrobel et al. presented a new computational procedure to perform the required 2D wavelet transform in Sub-domains [150,151]. Ravnik and Skerget et al. applied the wavelet BEM to fluid dynamics [152]. They proposed the governing equations in velocity–vorticity formulation and obtained solutions of the resulting systems of equations using Harr wavelet matrix compression. They further extended the basic idea to the hybrid approach of BEM and FEM [153]. Xiao and Wen et al. applied Daubechies wavelet to solve two dimensional Laplace equation and the wavelet BEM coefficient matrices computed by fast Fourier transform [154]. Barmada extended Daubechies wavelet BEM to solve diffusion equation [155]. Ravnik and Skerget et al. extended Daubechies wavelet BEM and traditional FEM to solve dilute particle laden flows [156]. Eppler and Harbrecht extended the bi-orthogonal spline wavelet BEM to the shape optimization for exterior electromagnetic shaping in two and three dimensions [157]. Ebrahimnejad and Attarnejad extended Daubechies wavelet to structural elasticity problems [158]. Xiao and Tausch et al. summarized the different compression schemes for the WGBEM, demonstrated their performances in dealing with practical problems including Stokes flow, acoustic scattering and capacitance extraction, and proposed a posteriori compression strategy of wavelet BEM matrices [159]. Then they proposed a wavelet BEM just with a scaling function and proved that the complexity of the new scheme never exceeds that of their old scheme [160] and extended the method to large-scale Stokes flows [161]. Moreover, Xiao and Tausch developed a fast wavelet multipole method to fully take advantage of the fast multipole method and wavelet compression method [162]. The quasi-vanishing moment wavelet was further extended by Xiao and Tausch et al. to three dimensional electrostatic characteristic analysis [163]. Ebrahimnejad and Attarnejad et al. developed a Daubechies wavelet BEM to analyze two dimensional elasticity problems [164]. In order to embed the fast wavelet BEM to several selectable CPU cores using Intel's OpenMp library, Scheiblich et al. developed a parallel hierarchical block wavelet compression scheme of BEM [165]. Harbrecht and Randrianarivony extended the wavelet BEM for the analysis of apparent surface charge which arises from salvation continuum models [166].

Among all the issues in wavelet BEM, choosing suitable wavelet basis is of great importance. In order to obtain high matrix compression rate, we need to use wavelets with short supports and high order of vanishing moments. However, for conventional wavelets, high order of vanishing moments implies complicated wavelet expressions (if they exist) and long supports, which consequently cause difficulties not only in the numerical evaluation of the system matrix entries but also in dealing with practical problem involving nonsmooth boundaries (e.g. boundaries containing edges and corners). It is noted that Li and Zhu presented a wavelet BEM scheme to solve two dimensional potential problems defined inside or outside of a circular boundary using interpolatory Hermite trigonometric wavelets [167]. Without any truncation technique, most of the multi-scale BEM sub-matrices are naturally zero and the BEM matrices at a certain wavelet level is naturally a block diagonal matrix using the interpolatory Hermite trigonometric wavelets. Therefore, it is important to select or construct a wavelet bases to meet the special requirement of explicit problems in engineering. It was pointed out that the versatile second-generation wavelet might be the best choice to construct the custom-design wavelet to compress wavelet BEM matrices.

In summary, the investigation, the difficulty and further research topic of wavelet BEM lie in four main aspects. The first one is the efficient wavelet BEM scheme for the h-version or p-version approximation using scaling functions at different levels, or the initial scaling function and wavelets at different levels. Secondly, the selection of wavelet with good properties is still a difficult task to solve explicit problems. Thirdly, as we know, the wavelet approximation coefficients are generally non-zeros but most of the smooth parts of solving domain lead to small wavelet approximation coefficients. Therefore, the reasonable truncation technique is the key to compress BEM matrices without influencing the accuracy. Finally, the hybrid of wavelet BEM and the traditional fast algorithm of BEM (e.g. fast multipole method, parallel computing method) or FEM is a noteworthy future direction.

Mesh-based numerical methods, such as FEM and BEM, have been used with great success in many fields. They are, however, associated with numerous limitations. Due to mesh-based interpolation, distorted or low quality meshes often lead to serious errors, while remeshing, a time-consuming task, is not guaranteed to be feasible for complex three-dimensional geometries [168]. Because of the underlying structure of the classical mesh-based methods, they are not fit for treating the problems with discontinuities or singularity. Thus, the meshless method appeared. The meshless method is a hot topic in computational mechanics at present. Some meshless methods have been proposed and achieved remarkable progress, such as the diffuse element method (DEM) [169], the element-free Galerkin (EFG) method [170,171], the mesh free point interpolation method (PIM) [172], and the meshless local Petrov–Galerkin (MLPG) method [173]. In the above meshless methods, the trial function and the equivalent form of differential equation are different. As their achievements in finite element analysis, wavelets were also introduced in study of meshless method. Wu and He et al. thought wavelet functions own the characters of compact support and orthogonally, which can overcome the redundancy of other field function in the calculation, and can reduce calculation or increase accuracy [174]. The basic theory of wavelet meshless method is briefly described as follows.

The shape function in meshless method is called kernel function, window function or weighting function, which is denoted by domain Ω as 
                     Fig. 12 shows.

The main property of the kernel function is the compact support, in which the support size is defined by the so-called dilatation parameter or smoothing length. If there are N groups of nodes in the solution region Ω, then the form of 
                        U
                        (
                        x
                        )
                        =
                        (
                        
                           
                              u
                           
                           
                              x
                              ,
                           
                        
                        
                           
                              v
                           
                           
                              x
                           
                        
                        )
                      is
                        
                           (50)
                           
                              U
                              (
                              x
                              )
                              =
                              
                                 ∑
                                 
                                    L
                                    =
                                    1
                                 
                                 N
                              
                              
                                 
                                    ∑
                                    
                                       k
                                       ∈
                                       Z
                                    
                                 
                                 
                                    
                                       
                                          α
                                       
                                       
                                          k
                                       
                                       
                                          L
                                       
                                    
                                    
                                       
                                          ϕ
                                       
                                       
                                          k
                                       
                                    
                                    (
                                    
                                       
                                          r
                                       
                                       
                                          L
                                       
                                    
                                    (
                                    X
                                    )
                                    )
                                 
                              
                           
                        
                     where 
                        
                           
                              X
                           
                           
                              L
                           
                        
                        =
                        (
                        
                           
                              x
                           
                           
                              L
                           
                        
                        ,
                        
                           
                              y
                           
                           
                              L
                           
                        
                        )
                      is an interpolation nodes, 
                        
                           
                              r
                           
                           
                              L
                           
                        
                        (
                        X
                        )
                        =
                        |
                        |
                        X
                        −
                        
                           
                              X
                           
                           
                              L
                           
                        
                        |
                        |
                        /
                        
                           
                              R
                           
                           
                              d
                              e
                              f
                           
                        
                     , 
                        
                           
                              R
                           
                           
                              d
                              e
                              f
                           
                        
                      is influence radius of the interpolation nodes, 
                        
                           
                              α
                           
                           
                              k
                           
                           
                              L
                           
                        
                      is the coefficient of 
                        
                           
                              ϕ
                           
                           
                              k
                           
                        
                        (
                        
                           
                              r
                           
                           
                              L
                           
                        
                        (
                        X
                        )
                        )
                     , 
                        
                           
                              ϕ
                           
                           
                              k
                           
                        
                        (
                        
                           
                              r
                           
                           
                              L
                           
                        
                        (
                        X
                        )
                        )
                      is the scaling function.
                        
                           (51)
                           
                              ϕ
                              (
                              x
                              )
                              =
                              
                                 ∑
                                 
                                    k
                                    =
                                    −
                                    ∞
                                 
                                 ∞
                              
                              
                                 
                                    
                                       p
                                    
                                    
                                       k
                                    
                                 
                                 ϕ
                                 (
                                 2
                                 x
                                 −
                                 k
                                 )
                              
                           
                        
                     considering the approximation in Eq. (50), it can be found that the form of approximation in wavelet-based method is the same as that in the conventional meshless methods. Scaling functions are similar to shape functions, and 
                        
                           
                              α
                           
                           
                              k
                           
                           
                              L
                           
                        
                      is similar to variables related to nodes in the conventional meshless methods. However, it should be noted that wavelet-based method is different from the conventional meshless methods in that it is unnecessary to use information of nodes to construct shape functions. So neither meshes nor nodes are needed in approximation [175].

After the construction of shape function, the rest of solving procedures of governing equations using wavelet-based methods are similar to other meshless algorithms. More details can be found in Refs. [175,176].

The desirable advantages of wavelet are multi-resolution properties and time and frequency localization. Though various wavelets can be used as basis functions in the approximations, wavelets which have orthogonality or biorthogonality and compact support are attractive in numerical simulation. This kind of wavelets can conveniently and accurately describe the details of the problem and perform well in resolving high gradients. In Refs. [175,176], Daubechies wavelet is employed for solution of two dimensional plain elastic problems. Because the scaling functions are directly used in function approximation, neither nodes nor meshes are needed in this method.

The wavelet-based meshless method uses the unique properties of wavelets to construct the formulations for solutions. It is more concise in the construction of shape functions than the traditional meshless methods. In addition, the wavelet properties can guarantee the accuracy and efficiency of the integral computation, which can be illustrated by the numerical examples. Therefore, it is a new idea in theory and an improvement in algorithm [175] to construct the field function of meshless method using wavelet basis function.

Besides the numerical methods mentioned above, some well-studied problems or approaches show a new vitality when they are combine with wavelet, such as the nonlinear terms, nonlinear boundary conditions, optimization method in numerical study and the adaptive analysis in time. In this section, we try to present some of the remarkable hybrid wavelet-based numerical methods which are not contained in the classification given above. They are hoped to perform as an effective supplement of the current classification.

Considering the localized and multi-scale nature of wavelets, scholars often pay much attention to the usage of wavelets for functions which are composed of local features. However, over a period of time it was regarded that a complete numerical method using wavelets had difficulties with nonlinear terms and boundary conditions. That is because nonlinear terms are dealt with in the wavelet community either by transforming back to the physical space for evaluation or by some expensive approximation to the wavelet coefficients of nonlinear terms. Likewise, wavelets at a boundary and boundary conditions imposed on these boundary functions are incipient area of research. In fact, it is perhaps not possible to obtain a sufficient order of accuracy at a boundary in order to maintain the global accuracy of the scheme [1]. Nevertheless, if the wavelets are utilized in their finite-difference form, then the complications at the boundaries and with nonlinear terms in the physical space could be avoided. Based on the above-mentioned problems, the wavelet-optimized finite difference method (WOFD) is proposed as a complete wavelet method which allows the wavelets to place the degrees-of-freedom at the same location and at the same resolution. WOFD is different from the common wavelet method in that all calculations in the physical space by applying finite-difference operators on the arbitrarily chosen wavelet-based grid can be performed well with the point values defined by degrees-of-freedoms. A successful usage of the WOFD is presented by Jameson and Adechi et al. [1] to determine numerically the neutral curve in the Lewis number-activation energy plane. The numerical results provided by WOFD are consistent with those given by asymptotic analysis and linear stability analysis. Another successful usage of the WOFD is presented by Bauer [177] in the application of conservation Laws. In his study, wavelet is used to formulate a hybrid adaptive scheme for partial differential equation in conservative form, which combines finite difference approximations for points away from the shock and numerical approximations near the shock.

Jameson also presented an important wavelet-based numerical method, i.e. spline-based wavelet subspace method [178]. In this method, the superconvergence is displayed in differentiation matrix when the basis is selected as spline. It is shown that spline-based functions generate a class of compact finite difference schemes. With this knowledge, boundary conditions of the proper order of accuracy can be imposed. Also, Liu and Schwarz et al. proposed the finite volume method based on wavelet [179]. In these studies, wavelet transforms and analysis of wavelet coefficients are used as a sensor for local mesh refinement.

In the above studies, the grid definition should be made by a Daubechies wavelet which corresponds in terms of superconvergence accuracy to the accuracy of the finite difference operator. It has been proven that the differentiation matrix of the Daubechies wavelet with M order vanishing moments displays differentiation accuracy of order 2
                        M under the assumptions of periodicity and a uniform grid [180]. This is the superiority of WOFD method.

An interesting extension of adaptive wavelet methods is the traveling wavelet method [181], in which both the position and scale of the wavelets can change continuously in time. However, because of the wavelet collision problem, this attractive method is proven to be unstable when applied to nonlinear problems. To overcome the wavelet collision problem, Bergdorf and Koumoutsakos [182] utilized Lagrangian particle methods with multiresolution wavelet-based grid adaptivity.

A related application for plasma simulations using particle methods for solving the Vlasov equation and wavelet-based grid adaption was proposed by Gutnic and Haefele et al. [183].

In this section, an example comparison study among the four main types of wavelet numerical methods is discussed. Analyses are performed for a rectangular plate with a hole (circle and rectangle). Since the parameters are different in the existing references, results given by the references in different cases are provided in the following for comparision.

This case of hole plane problem is presented in [184] by Tanaka and Hiroshi et al. They analyzed a rectangular plate with a hole. 
                     Fig. 13 shows the model and boundary condition. The plate is divided into 10×10 equally spaced structured cells and the B-spline wavelet is utilized to obtain the numerical results.

The numerical results of WGM for the analyses with linear, quadratic and cubic B-spline basis functions are shown in 
                     Fig. 14(a–c). To avoid the influence of material parameter, variations in the normalized stress σ
                     22/σ along the bottom edge of the plate are used. The numerical results confirm the multiresolution properties of the WGM, which reveals that the WGM techniques are effective.

Liu et al. [185] presented another case of hole plane problem solved via Daubechies wavelet-based meshless method. The model and geometric parameters are shown in 
                     Fig. 15. Young's modulus E=1×105, Poisson's ratio υ=0.3 and pressure p=1, Daubechies wavelet with N=6 are set to acquire the solutions.


                     
                     Fig. 16. presents the numerical results obtained by Daubechies wavelet-based meshless method with different resolution. It is obvious that the multi-scale results agree with the fine single scale results. Using the wavelet finite element method (BSWI43 element [99]) solve the same problem at 3 scale with 2 elements (2×11×11 DOFs) again, and the comparasion between meshless method and finite element method are listed in 
                     Table 1. It is recognized that the results given by the WMM fit better with those given by the classical FEM, but the WFEM uses less DOFs.

The results given above indicate that the accuracy of WGM, WMM and WFEM is all satisfying. Since the finite element method is the evolution of Galerkin method, the essences of the two method are similar. Compared with them, the messless method has better selectivity in geometric approximation for the property of messless.

Derivating form the variation principles in elasticity, WGM, WMM and WFEM have similar performance in computational mechanics to some extent. Firstly, most matrixes appearing in the solutions are symmetric, and the sparse representation of these matrixes is relatively easy. The development of numerical integration techniques facilitates the feasibility of the wavelet integration computation in these methods. As the WBM is based on the solution of Green equation, it is hard to compare its accuracy and efficiency with those of WGM, WMM and WFEM directly The biggest obstacle to BEM (containing WBE) is its efficiency instead of its accuracy. In BEM, the matrixes to be solved are not symmetric due to the application of integral theorem, which creates difficulties for equation solution sharply, thus many studies focus on the effciency promotion of BEM. Moreover, the application of wavelet interpolation in BEM aggravates the computation. The existence of singular point in the domain of integration of BEM aggravates the computation further. However, since the use of Green equation and wavelet interpolation, the dimension of solving problem is reduced and the interpolation of curved and surfaces are more accurate, which reduces the memory requirements and the time consumption in large scale problems. Since the employ of exact solution in solving the Green equation, the accuracy of BEM is higher than those of the WGM, WMM and WFEM in same computation scale. BEM, especially the WBE, is a promising method if the commercialization and customized definition can be solved well as the FEM.

In fact, the primary difference between the four methods (containing wavelet based ones) lies in the way geometric discretization schemes. The FEM may be termed as the volume integral method and the BEM as the boundary-integral method. The meshless methods can be considered either in the volume integral sense or in the boundary-integral sense. Additionally, the FEM and meshless method use numerical solution of an approximate representation of the problem. The BEM, on the other hand, involves numerical solution of otherwise exact representation of the problem offering highly accurate local solutions. The meshless method, though numerically more cumbersome, offers some advantages in the sense that it avoids model revision in the case of the FEM while considering nonlinearities caused by singularities [38].

This article aims at providing a relatively comprehensive review for the past and recent developments of wavelet-based numerical methods, noting their merits, drawbacks, and indicating the potential directions. The main issues to be studied in the future are given as follows:

As the hybrid numerical method could composite the superiority of different numerical methods, the hybrid numerical method based on wavelet is a potential direction. By combining the multi-resolution and multiscale computational properties of wavelet with the specific numerical method, the wavelet-Galerkin method, wavelet based meshless method, wavelet collocation method, wavelet boundary method, etc. all show great promise. It is foreseeable that the development of wavelet hybrid numerical method will be more significant in the structural analysis and other fields.

Another direction is the solution of mid-frequency problem. In order to obtain the appropriate numerical solution for the mid-frequency vibro-acoustic modeling problems, the reduced models approaches are widely adopted into computation. However, the reduction of model will lead to many headachy problems. Furthermore, the solution-based frequency methods, namely, the spectral-based element methods, have the difficulty in performing an overall vibration of the whole structure. Thus, it is possible to investigate the wavelet-based method for solving the mid-frequency for vibro-acoustic modeling.

Besides, multiscale resolution in computational materials, shock wave formation in chemical reaction, construction of new type of wavelet-based elements with higher order and less numbers of nodes, practical software development, etc. are expected to be the up-and-coming open issues.

@&#ACKNOWLEDGMENTS@&#

This work was supported by the NSAF (Grant No. 11176024), National Natural Science Foundation of China (Grant No. 51225501) and the National Basic Research Program of China (“973” Program) (Grant No. 2011CB706805).

@&#REFERENCES@&#

