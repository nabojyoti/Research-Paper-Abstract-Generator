@&#MAIN-TITLE@&#Contact stiffness estimation in ANSYS using simplified models and artificial neural networks

@&#HIGHLIGHTS@&#


               
                  
                  
                     
                        
                           
                           ANN were applied to obtain the normal contact stiffness parameter instead of the traditional trial-and-error approach.


                        
                        
                           
                           Simplified 2D contact models were used to capture the main features of the original 3D contact problem.


                        
                        
                           
                           A correction factor is deduced to correctly correlate the 2D–3D contact solutions.


                        
                        
                           
                           Good agreement is obtained from the normal contact stiffness estimated from 2D models with the original 3D parameter.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Contact problem

Contact stiffness

Finite element

Neural network

ANSYS

Connecting rod

@&#ABSTRACT@&#


               
               
                  The elastic contact problem, as implemented in some commercial software such as ANSYS, depends on the user choice of some parameters such as normal contact stiffness, penetration limit and contact algorithms. This work investigates the artificial neural networks (ANN) potential to predict the value of some parameters, avoiding the trial-and-error procedure to determine these values. Contact problems based on simple problems are used to train the neural network, so it can predict the normal contact stiffness for more complex problems. Some contact examples are evaluated, including the small end connecting rod contact problem, of great importance in automobile industry.
               
            

@&#INTRODUCTION@&#

Systems with several parts interacting together are subject to mechanical contact. The contact problem is nonlinear since the contact region is not known beforehand, and the boundary conditions may change during the analysis. A limited number of contact problems is sufficiently well behaved to have an analytical solution, such as the Hertz contact [10]. For this reason, contact problems are solved with numerical techniques in general. The most used technique to treat structural nonlinearities is the Finite Element Method (FEM) [1,4,13,14,16,19,23,25] while the Boundary Element Method (BEM) has been recently employed in contact problems [3,7,17,18], just to cite a few of the recent works.

There are several methods adapted to study the contact problem. In the case of FEM, the use of constrained minimization methods such as the Augmented Lagrangian Method is widely used to model the contact problem. In this case, the constraints of the minimization problem have physical equivalence, as non-penetration conditions (inequalities) or adherence (equality) [20,22].

The definition of the contact parameters (normal contact stiffness, penetration limit, etc.) and the contact algorithms in commercial software are very conditioned to the user experience with contact problems, where experimentation is the usual form to choose the contact parameters. An alternative used in this work to avoid experimentation is to employ artificial neural networks (ANN), where some results of the contact solution are used to estimate the contact parameters. Some parameters that can be used in the ANN are the penetration level with the normal contact stiffness. The ANN are an important analysis tool, since they can interpolate a complex input/output data set [8,9].

There is limited application of ANN in contact problems: in [2], an ANN is used to interpolate the contact parameters associated to a friction factor in multistage forging processes. In this type of process, the tools have restrictions in the allowed maximum stresses, hence the friction factor is an important design factor. The training set is composed by the calculated friction factor and its dependencies in the contact interface for each contact node in a finite element simulation. ANN are used to recover contact parameters of the applied force (both tangential and normal) and indenter width from tactile sensors in [5]. The training data are obtained from contact models constructed and solved with FEM. In [26], an ANN is used to map an imperfect tip shape for spherical indentation to the perfect spherical indenter, based on force-depth curves. In [28], a radial basis ANN is employed to obtain a model between some contact parameters such as contact pressure and sliding velocity and the corresponding wear coefficient. The ANN was trained from wear tests using the pin-on-disc technique.

One of the motivations of this work is the study of an automobile connecting rod small end contact problem. This is an essential component in intern combustion engines due to the role in the transformation of the combustion energy in rotative movement, through the piston-crankshaft connection. The connecting rod is subjected to elevated cyclic loads, with high compressive stress due to the gas expansion, and high lateral tensile due to the inertia. Thus, the durability of this component is of utmost importance in engines [21]. Results of the contact region behavior may not be consolidated even for well known systems, as in combustion engines components. In [24], the results of the contact pressure in the connecting rod small end are not conclusive due to the discrepancy in the solutions calculated from different authors. Reference [15] has further improved the work in [24], where the stress concentration at the small end depends on a proper combination of the initial clearance between the small end and the gudgeon pin, the applied load and the material properties.

The objective of this paper is to present a methodology to the estimation of contact stiffness, one of the main parameters of a contact problem in the commercial software ANSYS [1]. An ANN is employed to obtain the estimation of the contact stiffness based on the contact pressure and maximum penetration between elements. Several examples were analyzed to illustrate the benefits of the proposed approach.

The remaining of this paper is organized as follows. In Section 2 we present an introduction to the frictionless contact problem, and some considerations about the main contact parameters (normal contact stiffness, penetration limit, the Augmented Lagrangian Method contact algorithms). Section 3 contains the mathematical definition of the back-propagation ANN. Section 4 explains the methodology of the estimation of the normal contact stiffness. The results of the estimation of contact parameters using ANN are in Section 5. The benefits of the proposed approach are further detailed in Section 6. The concluding remarks are contained in Section 7.

We present in this section the main aspects of the contact formulation using the Augmented Lagrangian Method and how this method is implemented in the ANSYS software. This section is restricted to the essential ideas to allow the reader to understand the role of the main contact parameters that the ANN should estimate in a contact analysis using this software.

The contact problem can be formulated as a constrained minimization problem, where the objective function to be minimized is the total potential energy 
                           Π
                           (
                           u
                           )
                         of the bodies in contact, and the constraints are given by non-penetration conditions between the bodies. Thus, the problem can be stated as
                           
                              (1)
                              
                                 min
                                 
                                 Π
                                 (
                                 u
                                 )
                                 subject
                                 
                                 to
                                 
                                 
                                    
                                       g
                                    
                                    
                                       j
                                    
                                 
                                 (
                                 u
                                 )
                                 ≤
                                 0
                                 ,
                                 
                                 j
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 n
                              
                           
                        where u is the optimization variable (displacement vector) and 
                           
                              
                                 g
                              
                              
                                 j
                              
                           
                           (
                           u
                           )
                         represents one of the n non-penetration constraints that can be defined as
                           
                              
                                 
                                    •
                                 
                              
                              
                                 
                                    
                                       
                                          g
                                       
                                       
                                          j
                                       
                                    
                                    (
                                    u
                                    )
                                    <
                                    0
                                 : the bodies are separated;


                                 
                                    
                                       
                                          g
                                       
                                       
                                          j
                                       
                                    
                                    (
                                    u
                                    )
                                    =
                                    0
                                 : the bodies are in contact;


                                 
                                    
                                       
                                          g
                                       
                                       
                                          j
                                       
                                    
                                    (
                                    u
                                    )
                                    >
                                    0
                                 : there is penetration between the bodies.

The total potential energy 
                           Π
                           (
                           u
                           )
                         for the contact problem between two elastic bodies subjected to small deformations and small displacements (static problems) can be described as
                           
                              (2)
                              
                                 Π
                                 (
                                 u
                                 )
                                 =
                                 
                                    
                                       Π
                                    
                                    
                                       A
                                    
                                 
                                 (
                                 u
                                 )
                                 +
                                 
                                    
                                       Π
                                    
                                    
                                       B
                                    
                                 
                                 (
                                 u
                                 )
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       {
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         u
                                                      
                                                      
                                                         A
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         u
                                                      
                                                      
                                                         B
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       }
                                    
                                    
                                       t
                                    
                                 
                                 [
                                 
                                    
                                       
                                          
                                             
                                                
                                                   K
                                                
                                                
                                                   A
                                                
                                             
                                          
                                          
                                             0
                                          
                                       
                                       
                                          
                                             0
                                          
                                          
                                             
                                                
                                                   K
                                                
                                                
                                                   B
                                                
                                             
                                          
                                       
                                    
                                 
                                 ]
                                 {
                                 
                                    
                                       
                                          
                                             
                                                
                                                   u
                                                
                                                
                                                   A
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   u
                                                
                                                
                                                   B
                                                
                                             
                                          
                                       
                                    
                                 
                                 }
                                 −
                                 
                                    
                                       {
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         A
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         B
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       }
                                    
                                    
                                       t
                                    
                                 
                                 {
                                 
                                    
                                       
                                          
                                             
                                                
                                                   u
                                                
                                                
                                                   A
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   u
                                                
                                                
                                                   B
                                                
                                             
                                          
                                       
                                    
                                 
                                 }
                              
                           
                        where 
                           
                              
                                 K
                              
                              
                                 i
                              
                           
                         is stiffness matrix, 
                           
                              
                                 u
                              
                              
                                 i
                              
                           
                         is the displacement field, 
                           
                              
                                 f
                              
                              
                                 i
                              
                           
                         is the external force, i represents an elastic body (i=A or i=B) and t denotes matrix transposition. For convenience, these variables are simplified to K, u and f from now. Thus, the total potential energy is given by
                           
                              (3)
                              
                                 Π
                                 (
                                 u
                                 )
                                 =
                                 
                                    
                                       
                                          1
                                       
                                       
                                          2
                                       
                                    
                                 
                                 
                                    
                                       u
                                    
                                    
                                       t
                                    
                                 
                                 Ku
                                 −
                                 
                                    
                                       f
                                    
                                    
                                       t
                                    
                                 
                                 u
                              
                           
                        
                     

Several constrained minimization algorithms can be used to solve the problem of Eq. (1) such as the Penalty Method, the Lagrange Multipliers Method and the Augmented Lagrangian Method. The results presented in this paper are based on the Augmented Lagrangian Method according to the ANSYS implementation. This leads to the requirement of setting some contact parameters that are described in the next subsections together with a brief description of the Augmented Lagrangian formulation.

The Augmented Lagrangian method is considered as a hybrid method of Lagrange Multipliers method and Penalty method. For more details about these algorithms, refer to [12] for instance. The contact constraints are considered in this formulation using penalizing coefficients and Lagrange multipliers, penalizing the non-penetration restrictions violations in the same form of the Penalty method, and solving the constrained minimization problem through the solution of sequential unconstrained minimization problems with the updating of Lagrange multipliers in the solution process.

The Augmented Lagrangian function is given by
                           
                              (4)
                              
                                 
                                    
                                       L
                                    
                                    
                                       aum
                                    
                                 
                                 =
                                 Π
                                 (
                                 u
                                 )
                                 +
                                 
                                    
                                       λ
                                    
                                    
                                       t
                                    
                                 
                                 g
                                 (
                                 u
                                 )
                                 +
                                 
                                    
                                       
                                          1
                                       
                                       
                                          2
                                       
                                    
                                 
                                 r
                                 
                                    
                                       [
                                       g
                                       (
                                       u
                                       )
                                       ]
                                    
                                    
                                       +
                                    
                                    
                                       2
                                    
                                 
                              
                           
                        where 
                           
                              
                                 [
                                 x
                                 ]
                              
                              
                                 +
                              
                           
                         represents 
                           max
                           (
                           0
                           ,
                           x
                           )
                        , r is the penalizing coefficient and 
                           g
                           (
                           u
                           )
                           =
                           [
                           
                              
                                 g
                              
                              
                                 1
                              
                           
                           (
                           u
                           )
                           ,
                           
                           
                              
                                 g
                              
                              
                                 2
                              
                           
                           (
                           u
                           )
                           ,
                           
                           …
                           ,
                           
                           
                              
                                 g
                              
                              
                                 n
                              
                           
                           (
                           u
                           )
                           ]
                         is the constraint vector and 
                           λ
                         is the Lagrange multipliers vector. It is easy to verify that the Augmented Lagrangian function incorporates a penalization term and a Lagrange multiplier term.

The gradient of the Augmented Lagrangian function is given by
                           
                              (5)
                              
                                 ∇
                                 
                                    
                                       L
                                    
                                    
                                       aum
                                    
                                 
                                 =
                                 ∇
                                 Π
                                 (
                                 u
                                 )
                                 +
                                 
                                    
                                       λ
                                    
                                    
                                       t
                                    
                                 
                                 ∇
                                 g
                                 (
                                 u
                                 )
                                 +
                                 r
                                 
                                    
                                       [
                                       g
                                       (
                                       u
                                       )
                                       ]
                                    
                                    
                                       +
                                    
                                 
                                 ∇
                                 g
                                 (
                                 u
                                 )
                              
                           
                        which allows to verify that at the optimum point 
                           
                              
                                 u
                              
                              
                                 ⋆
                              
                           
                        , the penetration restriction fulfills 
                           g
                           (
                           
                              
                                 u
                              
                              
                                 ⋆
                              
                           
                           )
                           =
                           0
                        . In this case we have
                           
                              (6)
                              
                                 ∇
                                 
                                    L
                                    aum
                                 
                                 =
                                 ∇
                                 Π
                                 
                                    
                                       u
                                       ⋆
                                    
                                 
                                 +
                                 
                                    λ
                                    t
                                 
                                 ∇
                                 g
                                 
                                    
                                       u
                                       ⋆
                                    
                                 
                                 =
                                 0
                                 ,
                                 
                                 ∀
                                 r
                              
                           
                        which satisfies the Karush–Kuhn–Tucker conditions [12]. Hence, the penalizing coefficient is not required to reach excessive magnitude, since r has no influence in the optimality condition 
                           ∇
                           
                              
                                 L
                              
                              
                                 aum
                              
                           
                           =
                           0
                        . This is a recognized advantage of the Augmented Lagrangian Method over the classical Penalty Method.

The solution of the contact problem formulated as the minimization problem of Eq. (1) using the Augmented Lagrangian involves the minimization of the Augmented Lagrangian function of Eq. (4). In this case, the penalty coefficients and the Lagrange multipliers are updated in order to achieve the solution. The penalty term leads to a stiffness term, affecting the stiffness matrix, and the Lagrange multiplier term affects the load vector. This can be verified through the second derivative of Eq. (5). In this case, the penalty coefficient can be interpreted as the normal contact stiffness, named in ANSYS by the normal contact stiffness K
                        
                           n
                        . The contact penetration constraints can also be related to a specific parameter called TOLN. These two parameters are described in further subsections.

The contact problem solution using these concepts involves successive minimization of the Augmented Lagrangian function. This reflects in a new equilibrium equation based on the null gradient condition and in penalty coefficient and Lagrange Multipliers updating in each iteration.

In ANSYS [1], the contact pressure P in the Augmented Lagrangian Method is defined by
                           
                              (7)
                              
                                 P
                                 =
                                 {
                                 
                                    
                                       
                                          
                                             0
                                          
                                          
                                             if
                                             
                                             g
                                             <
                                             0
                                          
                                       
                                       
                                          
                                             
                                                
                                                   K
                                                
                                                
                                                   n
                                                
                                             
                                             g
                                             +
                                             
                                                
                                                   λ
                                                
                                                
                                                   i
                                                   +
                                                   1
                                                
                                             
                                          
                                          
                                             if
                                             
                                             g
                                             ≥
                                             0
                                          
                                       
                                    
                                 
                              
                           
                        and the multiplier λ
                        
                           i+1 is stated by
                           
                              (8)
                              
                                 
                                    
                                       λ
                                    
                                    
                                       i
                                       +
                                       1
                                    
                                 
                                 =
                                 {
                                 
                                    
                                       
                                          
                                             
                                                
                                                   λ
                                                
                                                
                                                   i
                                                
                                             
                                             +
                                             
                                                
                                                   K
                                                
                                                
                                                   n
                                                
                                             
                                             g
                                          
                                          
                                             if
                                             
                                             |
                                             g
                                             |
                                             >
                                             TOLN
                                          
                                       
                                       
                                          
                                             
                                                
                                                   λ
                                                
                                                
                                                   i
                                                
                                             
                                          
                                          
                                             if
                                             
                                             |
                                             g
                                             |
                                             <
                                             TOLN
                                          
                                       
                                    
                                 
                              
                           
                        where i denotes the specific iteration. If the penetration g is not superior to the penetration limit, the Lagrange multipliers will not be updated.

Eqs. (7) and (8) reflect the ANSYS penalty coefficient and Lagrange Multipliers strategies of updates, featuring the specific software implementation. The contact problem can be incorporated in the potential function, by adding the contact terms in the main diagonal of the global stiffness matrix in the case of the Augmented Lagrangian Method. These terms are adjusted by the penetration level of each iteration in the finite element analysis. Other contact algorithms, as the Lagrangian multiplier method, reorganize the stiffness matrix in order to incorporate the Lagrange multipliers.

The normal contact stiffness is one of the most important parameters in the contact problem, since it is responsible for the allowed penetration level of the bodies in contact. In ANSYS, the normal contact stiffness is selected by the user in two possibilities: (1) as a stiffness factor k
                        
                           n
                        , which acts as a scale parameter of the contact stiffness K
                        
                           n
                        , or (2) by specifying the magnitude of the contact stiffness K
                        
                           n
                         directly. Usually, the determination of the correct value of this parameter for each contact problem is not evident, and it is more intuitive to use the scale factor k
                        
                           n
                         in order to regulate the level of K
                        
                           n
                        . ANSYS calculates the value of K
                        
                           n
                         through some parameters as the Young modulus, the contact area, and the scale factor k
                        
                           n
                        .

For high values of the normal contact stiffness, there will be a small penetration. However, values too large can cause numerical ill-conditioning of the stiffness matrix. It is desirable to find an appropriated normal contact stiffness so the final penetration is small and does not influence the analysis result negatively.

Ideally, there should be no penetration between the contact bodies, because it characterizes a violation of the physics restrictions. Nevertheless, the most usual numerical techniques in the contact problem solution, such as penalty based methods, must imply in small penetration levels. The penetration limit is employed to quantify the acceptable penetration level of the contact bodies conjointly to the normal contact stiffness.

The TOLN parameter is associated to the surface normal direction, and it depends on the depth of the finite element adjacent to the contact element. The depth is defined by h and is exemplified in Fig. 1
                        . The allowable penetration TOLN is the product of the penetration limit factor FTOLN (defined by the user) by the average depth h of the adjacent finite element. If penetration is higher than the established limit, the solution is considered inappropriate. Alternatively, the desirable TOLN value can be specified directly by the user.

The use of the FTOLN factor can be more advantageous than specifying a maximum level of penetration. For coarse meshes with larger finite element size, the calculated penetration with FTOLN will be proportionally larger. For refined meshes, with reduced finite element size, FTOLN will generate a reduced level of penetration.

The study of the ANN is inspired in the functioning of the human brain, which is very efficient to process information. Amongst some characteristics, high-complexity, non-linearity and parallel processing are brain features. A neuron is capable of realizing complex operations like pattern and images recognition and is capable of learning from its environment [9].

An ANN is a system made by numerous simple structure units called neurons, arranged in a layered structure. Particular properties of the ANN are processing information in parallel and learning by experience feature, which allows the ANN to re-utilize the acquired experience. The ANN can be trained to play a specific function through the adjustment between the neurons connections. The neurons receive the information from several sources, then they combine and propagate the information forward in the network.

The back-propagation ANN is one of the main used algorithms in multilayer networks. Back-propagation ANN can use nonlinear activation function in the neurons, allowing a better model to be obtained with less neurons per layer. Also, a number of hidden layers is present, permitting the network to execute more complicated tasks. The higher the number of interconnections between the neurons, the higher the complexity of the network, which may provide a better interpolated model. Nevertheless, it becomes more difficult to describe the network behavior mathematically. Fig. 2
                      represents a typical back-propagation ANN. The usual notation to the locations of neurons (or layers) of the ANN considers the neuron i is left to neuron j, which is left to neuron k.

The variables in Fig. 2 are as follows:
                        
                           
                              
                                 •
                              
                           
                           
                              
                                 
                                    
                                       q
                                    
                                    
                                       j
                                    
                                 
                                 =
                                 [
                                 
                                    
                                       q
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                 
                                    
                                       q
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                 
                                    
                                       q
                                    
                                    
                                       l
                                    
                                 
                                 ]
                              : neuron input vector. It can be the network input or another neuron output;


                              
                                 
                                    
                                       w
                                    
                                    
                                       ji
                                    
                                 
                                 =
                                 [
                                 
                                    
                                       w
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                 
                                    
                                       w
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                 
                                    
                                       w
                                    
                                    
                                       l
                                    
                                 
                                 ]
                              : neurons synaptic matrix (weight matrix). The notation w
                              
                                 ji
                               associates the output of neuron i with the input of neuron j;


                              v
                              
                                 j
                              : summation of all weights multiplied by the input;


                              
                                 φ
                                 (
                                 
                                    
                                       v
                                    
                                    
                                       j
                                    
                                 
                                 )
                              : activation function;


                              y
                              
                                 j
                              : neuron output.

The training rule is based on the minimization of the network error [9]. It is desirable to minimize the mean square error (MSE) of the network and the expected output of the training set in function of the optimization variables (ANN weights w
                     
                        ji
                     ). The error is calculated only for the most external layer, therefore a rule that update all the weights for all layers must be implemented. The back-propagation learning rule consists of two steps: a forward step, where the ANN weights are fixed and the input goes through the entire ANN. Then, a backward step is executed, using a learn rule to update the ANN weights.

The error e
                     
                        j
                     (n) of the output neuron j in iteration n is given by
                        
                           (9)
                           
                              
                                 
                                    e
                                 
                                 
                                    j
                                 
                              
                              (
                              n
                              )
                              =
                              
                                 
                                    t
                                 
                                 
                                    j
                                 
                              
                              (
                              n
                              )
                              −
                              
                                 
                                    y
                                 
                                 
                                    j
                                 
                              
                              (
                              n
                              )
                           
                        
                     
                  

The MSE is defined by the sum of all the quadratic errors 
                        
                           
                              
                                 1
                              
                              
                                 2
                              
                           
                        
                        
                           
                              e
                           
                           
                              j
                           
                           
                              2
                           
                        
                        (
                        n
                        )
                      for all the M neurons of the output layer, for every N input of the training set. The MSE is defined as
                        
                           (10)
                           
                              
                                 
                                    ϵ
                                 
                                 
                                    ¯
                                 
                              
                              (
                              n
                              )
                              =
                              
                                 
                                    1
                                 
                                 
                                    2
                                    N
                                 
                              
                              
                                 
                                    ∑
                                 
                                 
                                    n
                                    =
                                    1
                                 
                                 
                                    N
                                 
                              
                              
                                 
                                    ∑
                                 
                                 
                                    j
                                    =
                                    1
                                 
                                 
                                    M
                                 
                              
                              
                                 
                                    e
                                 
                                 
                                    j
                                 
                                 
                                    2
                                 
                              
                              (
                              n
                              )
                           
                        
                     
                  

From [9], applying the chain rule, we obtain the following relation for the output layer:
                        
                           (11)
                           
                              
                                 
                                    ∂
                                    ϵ
                                    (
                                    n
                                    )
                                 
                                 
                                    ∂
                                    
                                       
                                          w
                                       
                                       
                                          ji
                                       
                                    
                                    (
                                    n
                                    )
                                 
                              
                              =
                              −
                              
                                 
                                    e
                                 
                                 
                                    j
                                 
                              
                              (
                              n
                              )
                              
                                 
                                    φ
                                 
                                 
                                    j
                                 
                                 
                                    ′
                                 
                              
                              (
                              
                                 
                                    v
                                 
                                 
                                    j
                                 
                              
                              (
                              n
                              )
                              )
                              
                                 
                                    y
                                 
                                 
                                    i
                                 
                              
                              (
                              n
                              )
                              =
                              
                                 
                                    δ
                                 
                                 
                                    j
                                 
                              
                              (
                              n
                              )
                              
                                 
                                    y
                                 
                                 
                                    i
                                 
                              
                              (
                              n
                              )
                              .
                           
                        
                     where 
                        
                           
                              φ
                           
                           
                              j
                           
                           
                              ′
                           
                        
                        (
                        
                           
                              v
                           
                           
                              j
                           
                        
                        (
                        n
                        )
                        )
                      is the derivative of the activation function with respect to v
                     
                        j
                     (n) and 
                        
                           
                              δ
                           
                           
                              j
                           
                        
                        (
                        n
                        )
                      is the local gradient of neuron j in iteration n 
                     [9].

To the hidden layers neurons, it is clear that there is no expected output. In this case, the hidden layer neuron error is calculated recursively in function of the local gradient of the external layers. This is the main characteristic of the back-propagation ANN. The local gradient 
                        
                           
                              δ
                           
                           
                              j
                           
                        
                        (
                        n
                        )
                      for a hidden neuron is defined as [9]
                     
                        
                           (12)
                           
                              
                                 
                                    δ
                                 
                                 
                                    j
                                 
                              
                              (
                              n
                              )
                              =
                              
                                 
                                    φ
                                 
                                 
                                    j
                                 
                                 
                                    ′
                                 
                              
                              (
                              
                                 
                                    v
                                 
                                 
                                    k
                                 
                              
                              (
                              n
                              )
                              )
                              
                                 
                                    ∑
                                 
                                 
                                    k
                                 
                              
                              
                                 
                                    δ
                                 
                                 
                                    k
                                 
                              
                              (
                              n
                              )
                              
                                 
                                    w
                                 
                                 
                                    kj
                                 
                              
                              (
                              n
                              )
                              .
                           
                        
                     
                  

The weight update 
                        Δ
                        
                           
                              w
                           
                           
                              ji
                           
                        
                        (
                        n
                        )
                      can be expressed as
                        
                           (13)
                           
                              Δ
                              
                                 
                                    w
                                 
                                 
                                    ji
                                 
                              
                              (
                              n
                              )
                              =
                              γ
                              Δ
                              
                                 
                                    w
                                 
                                 
                                    ji
                                 
                              
                              (
                              n
                              −
                              1
                              )
                              +
                              (
                              1
                              −
                              γ
                              )
                              η
                              
                                 
                                    ∂
                                    ϵ
                                    (
                                    n
                                    )
                                 
                                 
                                    ∂
                                    
                                       
                                          w
                                       
                                       
                                          ji
                                       
                                    
                                    (
                                    n
                                    )
                                 
                              
                           
                        
                     with 
                        0
                        ≤
                        γ
                        ≤
                        1
                     . γ is called as moment term, and η is the learning rate, that is updated in each iteration by an empiric rule defined in [6]. The use of the learning rate and moment term can boost the ANN training convergence [9].

The moment term has two roles: it tends to accelerate the error decreasing when the descent direction is stagnated, when 
                        Δ
                        
                           
                              w
                           
                           
                              ji
                           
                        
                      assumes the same signal (plus or minus) in successive iterations. This term has also a stabilization effect, when 
                        Δ
                        
                           
                              w
                           
                           
                              ji
                           
                        
                      oscillates between positive and negative values [9,11,27].

The normal contact stiffness factor is the most important parameter in a contact analysis, since its value influences the penetration level between the contact bodies. Higher K
                     
                        n
                      will result in lower penetration, but numerical ill-conditioning may arise. Higher values of the normal contact stiffness will also lead to an increase in the contact pressure, but only until the contact pressure reaches a 
                        
                           
                              K
                           
                           
                              n
                           
                           
                              ⋆
                           
                        
                     . From this point, the contact stiffness no longer affects the contact pressure.

Adjusting K
                     
                        n
                      requires some trial-and-error estimate, which can require computational and analyst time. The dimensions of the problem (2D or 3D) may increase the difficulties to determine the normal contact stiffness. It is clear that the choice of the contact stiffness is highly related to the analyst experience in solving different contact problems.

A model that provides K
                     
                        n
                      (or k
                     
                        n
                     ) given an acceptable estimate of the penetration between the bodies is highly desirable.

In this work, the estimation of the contact stiffness can be performed by simplified models that captures the general aspects of the contact problem. The general dimensions of a 3D problem can be given by two views of the component: the frontal and the lateral view. The frontal view can be discretized in a 2D mesh, representing the main aspects of the original contact problem. This 2D contact problem is then solved and the maximum penetration (g
                        
                           max
                        ) and the maximum contact pressure variation (
                           Δ
                           
                              
                                 P
                              
                              
                                 max
                              
                           
                        ) are obtained. The contact pressure variation is determined according to
                           
                              (14)
                              
                                 Δ
                                 
                                    
                                       P
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             P
                                          
                                          
                                             i
                                             +
                                             1
                                          
                                       
                                       −
                                       
                                          
                                             P
                                          
                                          
                                             i
                                             −
                                             1
                                          
                                       
                                    
                                    
                                       
                                          
                                             P
                                          
                                          
                                             i
                                             −
                                             1
                                          
                                       
                                    
                                 
                              
                           
                        where i is a specific configuration where the contact pressure was taken as shown in Fig. 3
                        .

It is evident that the calculated values of g
                        
                           max
                         and 
                           Δ
                           
                              
                                 P
                              
                              
                                 max
                              
                           
                         from the 2D contact problem do not represent accurately the 3D problem results. Thus, in order to improve the estimation, the lateral view is used to calculate a correction factor f to put these parameters closer to the expected values of the original 3D problem.

The correction factor, f, is obtained from the maximum penetration g
                        
                           B
                         found in the lateral view divided by the maximum penetration g
                        
                           A
                         of the frontal view, assuming the same values of k
                        
                           n
                         in both models, i.e.,
                           
                              (15)
                              
                                 f
                                 =
                                 
                                    
                                       
                                          
                                             g
                                          
                                          
                                             B
                                          
                                       
                                    
                                    
                                       
                                          
                                             g
                                          
                                          
                                             A
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Using the simplified models, a data set of contact results is assembled. The maximum penetration and the maximum contact pressure variation are used to train an ANN. Both inputs are multiplied by the correction factor, f, before any action is performed, as illustrated in Fig. 4
                        . Hence, the estimate of k
                        
                           n
                         for the original 3D contact problem is the output of the network.

With this formulation it is not necessary to solve the original 3D contact problem to find an estimation of the normal contact stiffness factor. The solution of both 2D contact problems represents a significant reduction in the computational time to find the normal contact stiffness factor.

Let us remark that the ANN can be used to estimate the normal contact stiffness using the maximum penetration and the maximum contact pressure variation directly from the 3D contact problem. Nevertheless, to build a training set from the original contact problem can demand huge amounts of computational time.

@&#RESULTS@&#

The potential of the ANN to determine the normal contact stiffness factor is evaluated in this section. Some 3D examples were approximated by 2D contact problems in order to generate data for training the ANN.

The examples consider an isotropic material with Young modulus E=210GPa and Poisson ratio ν=0.3 and the plane stress hypothesis.

The maximum penetration and maximum contact pressure variation are used as inputs for the back-propagation ANN, providing the normal contact stiffness factor at the ANN output. The chosen training algorithm is the gradient method with momentum [9]. The ANN architecture consists in three layers, using a sigmoide tangential activation function (
                        φ
                        (
                        v
                        )
                        =
                        (
                        
                           
                              e
                           
                           
                              v
                           
                        
                        −
                        
                           
                              e
                           
                           
                              −
                              v
                           
                        
                        )
                        /
                        (
                        
                           
                              e
                           
                           
                              v
                           
                        
                        +
                        
                           
                              e
                           
                           
                              −
                              v
                           
                        
                        )
                     ) for the two first layers, and a linear function (
                        φ
                        (
                        v
                        )
                        =
                        v
                     ) in the last layer. The moment term used was 0.6. A validation set is used to verify the identification capabilities of the trained ANN. The inputs of the validation set were not used during the ANN training.

It was assumed that the considered space of k
                     
                        n
                      values (
                        0.1
                        ≤
                        
                           
                              k
                           
                           
                              n
                           
                        
                        ≤
                        100
                     ) contains the representative contact solutions. The used training sets from all examples can be found in Appendix A.

The relative error is defined as
                        
                           (16)
                           
                              error
                              =
                              
                                 
                                    
                                       
                                          k
                                       
                                       
                                          n
                                          (
                                          network
                                          )
                                       
                                    
                                    −
                                    
                                       
                                          k
                                       
                                       
                                          n
                                          (
                                          expected
                                          )
                                       
                                    
                                 
                                 
                                    
                                       
                                          k
                                       
                                       
                                          n
                                          (
                                          expected
                                          )
                                       
                                    
                                 
                              
                           
                        
                     where 
                        
                           
                              k
                           
                           
                              n
                              (
                              network
                              )
                           
                        
                      is the normal contact stiffness factor predicted by the ANN, and 
                        
                           
                              k
                           
                           
                              n
                              (
                              expected
                              )
                           
                        
                      is the real value of the parameter.


                        Fig. 5
                         represents a block over a T-structure. There is a uniform distributed surface load on the block of 92.69MPa (total of 10,000N). The structure was modeled with 13,926 nodes and 2,760 finite elements (20-nodes each). Only one quarter of the structure was modeled due to the symmetry of the problem.

Two simplified 2D models were used: (1) the frontal view to generate the training data, and (2) the lateral view to calculate the correction factor f. Fig. 6
                            is composed of the frontal view (left) and the lateral view (right). The applied load is 92.69MPa.

The surface load of lateral view model is also 92.69MPa. Since the meshes of the two problems are uniform (same finite element size), the normal contact stiffness can be considered equivalent. However, the penetration results are distinct for each model. The location of the maximum penetration is also indicated in Fig. 6 (points A and B). In this example, the correction factor obtained is f=3.9.


                           Table A1 shows the training set of the ANN without the factor f. The ANN of this example has 200 neurons in the first layer, 200 neurons in the second layer and 1 neuron in the third layer. The ANN was trained with 10,000 iterations. Fig. 7
                           (a) and (b) illustrates the ANN training for each input. One can observe that for 
                              
                                 
                                    k
                                 
                                 
                                    n
                                 
                              
                              <
                              0.5
                           , the ANN does not associate the penetration and contact pressure variation with its normal contact stiffness factor.


                           Table 1
                            illustrates the ANN pattern classification capability for the validation set, where a good correlation between identified and used k
                           
                              n
                            is attained.


                           Table 2
                            shows the identification potential of the ANN to predict the normal contact stiffness factor of the 3-dimensional contact problem. It is important to remark that the ANN was trained from data of the 2-dimensional problems. The largest error is given for k
                           
                              n
                           =3, close to the limit range of the training set.


                        Fig. 8
                         represents a 3-dimensional contact problem of an elastic sphere in contact with a rigid surface where an analytical solution is known [10].

The analytical maximum contact pressure is given by
                           
                              (17)
                              
                                 
                                    
                                       p
                                    
                                    
                                       max
                                    
                                 
                                 =
                                 
                                    
                                       3
                                       F
                                    
                                    
                                       2
                                       π
                                       
                                          
                                             a
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                              
                           
                        where p
                        
                           max
                         is the maximum contact pressure, F is the applied load and a is the contact area and is given by
                           
                              (18)
                              
                                 a
                                 =
                                 
                                    
                                       
                                          
                                             3
                                             Fd
                                          
                                          
                                             8
                                          
                                       
                                       
                                          
                                             1
                                             −
                                             
                                                
                                                   ν
                                                
                                                
                                                   2
                                                
                                             
                                          
                                          
                                             E
                                          
                                       
                                    
                                    
                                       3
                                    
                                 
                              
                           
                        
                     

The sphere has a diameter d=20mm and it was discretized with 135,400 nodes and 32,000 20-node finite elements. Due to the symmetry, only one-eighth of the problem was modeled. The applied load is F=4,000N.

The simplified 2-dimensional problem is a “slice” of the sphere. The best representation of this “slice” is a cylinder of infinitesimal length, and is illustrated in Fig. 9
                           . Due to the problem symmetry, only one quarter of the cylinder is modelled.

This problem has an analytical solution, where the maximum contact pressure is given by
                              
                                 (19)
                                 
                                    
                                       
                                          p
                                       
                                       
                                          max
                                       
                                    
                                    =
                                    
                                       
                                          2
                                          
                                             
                                                F
                                             
                                             
                                                2
                                                D
                                             
                                          
                                       
                                       
                                          π
                                          bL
                                       
                                    
                                 
                              
                           where L is the length of the cylinder and the contact area b is
                              
                                 (20)
                                 
                                    b
                                    =
                                    
                                       
                                          
                                             
                                                2
                                                
                                                   
                                                      F
                                                   
                                                   
                                                      2
                                                      D
                                                   
                                                
                                                d
                                             
                                             
                                                π
                                                L
                                             
                                          
                                          
                                             
                                                1
                                                −
                                                
                                                   
                                                      ν
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                             
                                                E
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

Due to the plane stress hypothesis, the discretized cylinder has a unitary thickness (L=1mm). Assuming that the contact pressure in the 2D model is the same from the 3D problem, and from Eqs. (19) and (17), we obtain 
                              
                                 F
                                 
                                    2
                                    D
                                 
                              
                              =
                              7
                              ,
                              540.2
                           
                           N. The applied force has the property to impose the same level of contact pressure and penetration for both bidimensional and tridimensional models.


                           Table A2 contains the data used to train the ANN. The correction factor for this problem is f=1.0, since it was assumed the same level of penetration for both simplified and original contact problems.

This ANN has 600 neurons in the first layer, 200 neurons in the second layer and 1 neuron in the third layer. The ANN was trained with 15,000 iterations. Fig. 10
                           (a) and (b) illustrates the ANN training process, where both penetration and contact pressure variation are properly identified.


                           Table 3
                            shows the ANN results of the validation set. Good agreement is achieved between the prediction of the ANN and the expected normal contact stiffness factor.

The identification of the normal contact stiffness factor from the original 3-dimensional problem is given in Table 4
                           . Reasonable agreement between the used and the identified k
                           
                              n
                            is obtained. The higher error is 14.50% for k
                           
                              n
                           =60, which can be considered an acceptable error for a high normal contact stiffness factor.


                        Fig. 11
                         illustrates the mesh of the connecting rod small end in contact with the piston pin. The model is discretized with 86,199 nodes, 7,199 20-node finite elements and 32,226 10-node finite elements. Again, only one quarter of the problem is discretized. The pin of this model is subject to a vertical distributed force 
                           F
                           =
                           40
                           ,
                           000
                        
                        N. To simplify this problem, the lower part of the connecting rod was not discretized.


                           Fig. 12
                            is a sketch of the 3-dimensional problem, which includes some of the dimensions of the connecting rod and the distribution of the applied force over the pin.

The pin has a hole of diameter d=19mm. It is not possible to model a hole in a pin in a 2-dimensional, and a full pin does not represent the pin behavior correctly. Hence, a simple rule was used to add the behavior of the original pin to the 2D model, connecting the upper pin nodes to the lower nodes in the simplified model, as shown in Fig. 13
                           . The dashed lines illustrate the coupling between the upper and lower pin nodes.

The coupling rule is given by
                              
                                 (21)
                                 
                                    
                                       
                                          U
                                       
                                       
                                          y
                                       
                                       
                                          L
                                       
                                    
                                    =
                                    (
                                    0.0029628
                                    
                                       
                                          x
                                       
                                       
                                          pin
                                       
                                    
                                    +
                                    0.70231
                                    )
                                    
                                       
                                          U
                                       
                                       
                                          y
                                       
                                       
                                          S
                                       
                                    
                                 
                              
                           where U
                           
                              y
                           
                           
                              L
                            and U
                           
                              y
                           
                           
                              S
                            are the vertical displacement of the lower and upper part of the pin, respectively. The rule was obtained by interpolating the displacement of the upper and lower nodes of the hole from the original pin according to the position x
                           
                              pin
                            along the pin.

For the frontal view, the applied load used is 
                              F
                              =
                              40
                              ,
                              000
                              /
                              
                                 
                                    2
                                    π
                                    ×
                                    20.513
                                    /
                                    8
                                 
                              
                              =
                              2
                              ,
                              482.8
                           
                           N and for the lateral view 
                              F
                              =
                              40
                              ,
                              000
                              /
                              25.1
                              =
                              1
                              ,
                              593.6
                           
                           N. The correction factor f was calculated using the contact solution at positions A and B in Fig. 12. In this problem, this value is f=3.17.

The ANN data of maximum penetration and maximum contact pressure variation are shown in Table A3. This ANN has 100 neurons in the first layer, 100 neurons in the second layer and one neuron in the third layer. The ANN was trained with 10,000 iterations. Fig. 14
                           (a) and (b) illustrates the simulated results of the ANN.


                           Table 5
                            shows the classification of the ANN for the validation set. The ANN is able to identify different types of penetration and contact pressure variation correctly.

The identified k
                           
                              n
                            from the 3-dimensional problem is given in Table 6
                           . The ANN was able to recognize contact stiffness factors correctly for 
                              
                                 
                                    k
                                 
                                 
                                    n
                                 
                              
                              >
                              5
                           . For 
                              
                                 
                                    k
                                 
                                 
                                    n
                                 
                              
                              ≤
                              5
                           , the difference of the simulation and the expected value of k
                           
                              n
                            is too large. The possible reason for this behavior is that the values of g
                           
                              max
                            and 
                              Δ
                              
                                 
                                    P
                                 
                                 
                                    max
                                 
                              
                            are not well represented in the 2D contact solution.

@&#DISCUSSION@&#


                     Fig. 15
                      shows the solution time for several contact stiffness factors of the connecting rod small-end contact problem. It is expected higher solution times for higher k
                     
                        n
                      values. The analyst must find an appropriate value of k
                     
                        n
                      that implies in a small penetration and does not influence the numerical conditioning of the system stiffness matrix, which is traditionally done by trial-and-error approaches. Each computer job executed to find the correct value of k
                     
                        n
                      results in wasted computational time.

The use of a trained ANN allows to make a reasonable estimation of 
                        
                           
                              k
                           
                           
                              n
                           
                           
                              ⋆
                           
                        
                      to a given maximum penetration, without the inconvenient of the trial-and-error estimation. This estimated k
                     
                        n
                      will be in some sub-optimum region, near 
                        
                           
                              k
                           
                           
                              n
                           
                           
                              ⋆
                           
                        
                     , shown in Fig. 16
                     .

The last consideration about the use of the ANN in the identification of contact parameters is the training time. Since the complexity between g
                     
                        max
                     , 
                        Δ
                        
                           
                              P
                           
                           
                              max
                           
                        
                      and k
                     
                        n
                      varies for each contact problem, some training sets require more time than others to be learned by the ANN. Also, the architecture of the ANN (number of layers, number of neurons per layer) is important to the computing time. Table 7
                      shows the used time to train each ANN. It was used a quad CORE i7 2.67GHz with 8Gb RAM.

For the analyzed contact problems, the training time can be considered irrelevant compared to the time to solve a 3-dimensional contact problem, for example.

@&#CONCLUSIONS@&#

The normal contact stiffness is one of the most important parameters of the contact problem when modeled by finite elements. This value normally depends on the experience of the analyst with contact problems, and this choice is crucial to the relevance of the contact solution. A small value may lead to a higher penetration and to a non-representative contact pressure variation. A high normal contact stiffness will can lead to a lower penetration and to a better contact pressure, but numerical ill-conditioning may occur.

The use of multilayer ANN to estimate the normal contact stiffness factor of 3D contact problems was discussed in this work. Some of the contact responses such as the maximum penetration and maximum contact pressure variation were used as input to an ANN. These data was obtained from 2D simplified models which capture the main features of the original problem. Other types of models could be employed as well in order to assemble a training set for the ANN, for instance, different 3D analysis with similar geometry and loading may give important information about the maximum penetration and maximum contact pressure in the area of interest.

This work shows that the trained ANN were able to estimate the contact stiffness for the original contact problem avoiding the trial-and-error method, saving significant time in order to adjust the contact stiffness value.

@&#ACKNOWLEDGEMENTS@&#

The authors thank ThyssenKrupp Metalúrgica Campo Limpo Ltda (Campo Limpo – Sao Paulo - Brazil) for the financial support.

The used training sets of the examples are listed in this section. Table A1
                      corresponds to the T-structure example. Table A2
                      presents the training set of the elastic sphere contact example. Finally, Table A3
                      represents the connecting-rod contact problem.

@&#REFERENCES@&#

