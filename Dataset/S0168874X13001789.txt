@&#MAIN-TITLE@&#Adaptive response surface based efficient Finite Element Model Updating

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Moving least-squares method (MLSM) based response surface method (RSM) for model parameter updating.


                        
                        
                           
                           Comparative assessment between the MLSM based and the conventional least-squares method (LSM) based approach.


                        
                        
                           
                           The MLSM based RSM identifies better than the LSM based approach.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Finite Element Model Updating

Response surface

Moving least-squares method

@&#ABSTRACT@&#


               
               
                  The requirement of repeated evaluation of structural responses in typical sensitivity based Finite Element Model Updating (FEMU) procedure limits its popular applications for large structures. The least-squares method (LSM) based response surface method (RSM) is applied as a potential alternative for responses approximations in iterative model updating procedure. However, the LSM is a major source of error in response prediction and the moving least-squares method (MLSM) is found to be more efficient in this regard. An attempt has been made in the present study to explore the effectiveness of MLSM based RSM in FEMU. A comparative assessment is performed between the MLSM based and the conventional LSM based RSM for model parameter updating. The comparative study is being illustrated with the help of two example problems using artificially generated input responses. It is generally observed that the MLSM based RSM identifies better than the LSM based approach.
               
            

@&#INTRODUCTION@&#

The Finite Element Model Updating (FEMU) has emerged as a subject of immense importance and are used in many applications such as damage detection, structural health monitoring (SHM), structural control, structural evaluation and assessment [1,2]. A number of FEMU procedures providing clear overview of structural model updating may be seen in [3,4]. The non-iterative methods that directly update the finite element (FE) model properties are one-step procedures [5,6]. The iterative FEMU procedure uses the sensitivities of the parameters to find their changes involving solution of an optimization problem. There are examples of successful application of FEMU strategy using both static displacements and strains [7–9] obtained by less complicated measurement and data processing than those for dynamic ones. It was observed that the static response based FEMU strategy under moderate noise level show higher effectiveness and accuracy if more response information is provided. A recent baseline FE model for bridge management and calibration using non-destructive test (NDT) data is notable in this regard [10]. It is noted that the mathematical model used in the model updating is usually ill posed and the special attention is required for an accurate solution [11]. Jaishi and Ren [12,13] used either single-objective or multi-objective optimization technique to update the FE models of structures.

The aforementioned traditional sensitivity-based FEMU methods require complicated constructions of sensitivity matrices because the FE models should be tuned and recomputed during optimization process. For a large FE model repeated evaluation of performance function and local gradients are not only computational intensive, but may also result convergence difficulty, especially when complex nonlinear constitutive behaviors are involved. Thus, for a large FE model requiring update of huge geometric and physical structural parameters can rule out many FEMU approaches. Furthermore, the mechanical model and the iterative updating method need to be merged together for complex problem. For this, the structural FE models are often constructed by using various commercial FE softwares like ANSYS, ABAQUS and SAP etc. For this, each iteration needs to go back to run the FE analysis package with any parameter updated, which limits the popular application of FEMU procedure in practice. Hence, alternative techniques for efficient computation of response of large structures by overcoming the aforementioned drawbacks while retaining the accuracy is of paramount importance for FEMU of large structural system. Response Surface Method (RSM) based meta-modelling has emerged as a convenient alternative solution to such problems to achieve a balance. The primary advantages of RSM in the context of FEMU are its easy implementation and high cost-efficiency. Iwasaki et al. [14] introduced the idea of pursuing damage detection by comparing the actual response surface (RS) built on some monitored response variables with a reference RS associated with the undamaged state. Faravelli and Casciati [15] overviewed the recent developments and potential of RSM in SHM. Guo and Zhang [16] applied the central composite design to construct RS models for updating structural stiffness of an H-shaped structure using modal frequencies as the input response. The potential of RSM-based model updating has been explored by Fang and Perera [17] to identify the existing damage of a tested reinforced concrete frame and an experimental full-scale bridge. The RSM based FEMU procedure using uniform design to estimate the structural parameters based on measured natural frequencies [18] and static responses [19] are presented. It is generally observed that the RSM-based model updating is much more cost-effective than the traditional sensitivity-based FEMU procedure considering the likewise accurate predictions.

The applications of RSM in FEMU as discussed in the above are based on the global approximation of scatter position data, obtained by using the least-squares method (LSM). However, the LSM is one of the major sources of error in prediction by the RSM. The moving least square method (MLSM), basically a local approximation approach is found to be more efficient in this regard [20–22]. In the present study, an attempt has been made to explore the applicability and effectiveness of MLSM based RSM for FEMU using static responses. The methodology of updating procedure involves the selection of model parameters, evaluation of responses by FE analysis at judiciously selected set of input model parameters to create the RS model. A design of experiment (DOE) technique is utilized for selecting the efficient set of input model parameters considering their feasible range of variation. The iteration during the optimization process necessary for FEMU is carried out within the established RS model. However, during the iteration, the evaluation of structural response using RS based metamodel is performed by the MLSM based RSM. A comparative study of parameter identification is being made to study the superiority of the MLSM based approach over LSM approach. The comparative study is being illustrated with the help of two numerical examples using artificially generated input responses.

The RSM is a set of mathematical and statistical techniques designed to gain a better understanding about the overall response by DOE and subsequent analysis of experimental data. The method primarily uncovers analytically complicated or an unknown relationship between several inputs and desired output through empirical models (non-mechanistic) in which the response function is replaced by a simple function (often polynomial) that is fitted to data at a set of carefully selected points (referred as DOE), normally obtained from experimental investigation or numerical simulation. To create a response surface that will serve as a surrogate for the FE simulation model, the basic process consists of calculating predicted values of the response features at various sample points in the parameter space by performing an experiment at each of those points.

If there are n response values y
                        
                           i
                         corresponding to n numbers of observed data, x
                        
                           ij
                         (denotes the ith observation of the input variable x
                        
                           j
                         in a DOE), the relationship between the response and the input variables can be expressed by the following:
                           
                              (1)
                              
                                 y
                                 =
                                 X
                                 β
                                 +
                                 
                                    
                                       ε
                                    
                                    
                                       y
                                    
                                 
                              
                           
                        In the above multiple non-linear regression model X, y, β and ε
                        
                           y
                         are the design matrix containing the input data from the DOE, the response vector, the unknown co-efficient vector and the error vector, respectively. Typically, the quadratic polynomial form used in the RSM is as following:
                           
                              (2)
                              
                                 y
                                 =
                                 
                                    
                                       β
                                    
                                    
                                       0
                                    
                                 
                                 +
                                 
                                    ∑
                                    
                                       i
                                       =
                                       1
                                    
                                    k
                                 
                                 
                                    
                                       
                                          β
                                       
                                       
                                          i
                                       
                                    
                                    
                                       
                                          x
                                       
                                       
                                          i
                                       
                                    
                                    +
                                    
                                       ∑
                                       
                                          i
                                          1
                                       
                                       k
                                    
                                    
                                       
                                          ∑
                                          
                                             j
                                             =
                                             1
                                          
                                          k
                                       
                                       
                                          
                                             
                                                β
                                             
                                             
                                                ij
                                             
                                          
                                          
                                             
                                                x
                                             
                                             
                                                i
                                             
                                          
                                          
                                             
                                                x
                                             
                                             
                                                j
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The LSM of estimation technique is usually applied to obtain the unknown polynomial coefficient by minimizing the error norm defined as
                           
                              (3)
                              
                                 L
                                 =
                                 
                                    
                                       
                                          ∑
                                          
                                             i
                                             =
                                             1
                                          
                                          n
                                       
                                       
                                          (
                                          
                                             
                                                
                                                   y
                                                
                                                
                                                   i
                                                
                                             
                                             −
                                             
                                                
                                                   β
                                                
                                                
                                                   0
                                                
                                             
                                             −
                                             
                                                ∑
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                k
                                             
                                             
                                                
                                                   
                                                      β
                                                   
                                                   
                                                      i
                                                   
                                                
                                                
                                                   
                                                      x
                                                   
                                                   
                                                      i
                                                   
                                                
                                                −
                                                
                                                   ∑
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   k
                                                
                                                
                                                   
                                                      ∑
                                                      
                                                         j
                                                         =
                                                         1
                                                      
                                                      k
                                                   
                                                   
                                                      
                                                         
                                                            β
                                                         
                                                         
                                                            i
                                                            j
                                                         
                                                      
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            j
                                                         
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                          )
                                       
                                    
                                    2
                                 
                                 =
                                 
                                    
                                       (
                                       y
                                       −
                                       X
                                       β
                                       )
                                    
                                    T
                                 
                                 (
                                 y
                                 −
                                 X
                                 β
                                 )
                              
                           
                        and the least squares estimate of β is obtained as
                           
                              (4)
                              
                                 β
                                 =
                                 
                                    
                                       [
                                       
                                          
                                             X
                                          
                                          T
                                       
                                       X
                                       ]
                                    
                                    
                                       −
                                       1
                                    
                                 
                                 {
                                 
                                    
                                       X
                                    
                                    T
                                 
                                 y
                                 }
                              
                           
                        Once the polynomial coefficients β are obtained from the above equation, the response y can be readily evaluated for any set of input parameters. To fit an accurate model within reasonable time, it is required that the initial input data (X and y) are selected judiciously. It may be realized that the accuracy of evaluation of structural parameters need to be updated will depend on the capability of a metamodel to capture the nonlinearity and the local variations of response behaviors. This is due to the fact that the accuracy of the updated parameters relies on how accurate the metamodel is in capturing the response variations during each iteration cycle of the numerical optimization procedure [23]. It may be noted that the construction of RS model as discussed above is the global approximation of scatter position data, obtained by using the LSM [24,25]. The MLSM based adaptive RSM; a local approximation procedure is found to be much more effective in evaluating RS polynomial accurately [20,25]. It is expected that the updated parameter will be more accurate and the number of iteration in the update procedure will be reduced if MLSM is used in lieu of LSM based RSM in the FEMU procedure. Keeping this in view, a new algorithm to obtain an improved RSM for FEMU in the framework of MLSM method is proposed.

The MLSM based RSM is a weighted LSM that has varying weight functions with respect to the position of approximation. The weight associated with a particular sampling point x
                        
                           i
                         decays as the prediction point x moves away from x
                        
                           i
                        . The weight function is defined around the prediction point x and its magnitude changes with x. The least-squares function L
                        
                           y
                        (x) can be defined as the sum of the weighted errors as following:
                           
                              (5)
                              
                                 
                                    
                                       L
                                    
                                    
                                       y
                                    
                                 
                                 (
                                 x
                                 )
                                 =
                                 
                                    ∑
                                    
                                       i
                                       =
                                       1
                                    
                                    n
                                 
                                 
                                    
                                       
                                          w
                                       
                                       
                                          i
                                       
                                    
                                    
                                       
                                          ε
                                       
                                       
                                          i
                                       
                                       
                                          2
                                       
                                    
                                    =
                                    
                                       
                                          ε
                                       
                                       T
                                    
                                    W
                                    (
                                    x
                                    )
                                    ε
                                    =
                                    
                                       
                                          (
                                          y
                                          −
                                          x
                                          β
                                          )
                                       
                                       T
                                    
                                    W
                                    (
                                    x
                                    )
                                    (
                                    y
                                    −
                                    x
                                    β
                                    )
                                 
                              
                           
                        where, W(x) is the diagonal matrix of the weight function. It can be obtained by utilizing the weighting function such as constant, linear, quadratic, higher order polynomials, exponential functions, etc. [20,26]. In the present study, following exponential form is considered:
                           
                              (6)
                              
                                 
                                    
                                       
                                          
                                             w
                                             (
                                             x
                                             −
                                             
                                                
                                                   x
                                                
                                                
                                                   i
                                                
                                             
                                             )
                                             =
                                             w
                                             (
                                             d
                                             )
                                             =
                                             exp
                                             (
                                             −
                                             d
                                             /
                                             
                                                
                                                   R
                                                
                                                
                                                   I
                                                
                                             
                                             )
                                          
                                       
                                       
                                          
                                             if
                                             
                                             d
                                             /
                                             
                                                
                                                   R
                                                
                                                
                                                   I
                                                
                                             
                                             ≤
                                             1.0
                                          
                                       
                                    
                                    
                                       
                                          
                                             =
                                             0.0
                                          
                                       
                                       
                                          
                                             if
                                             
                                             d
                                             /
                                             
                                                
                                                   R
                                                
                                                
                                                   I
                                                
                                             
                                             ≥
                                             1
                                             .
                                             0
                                          
                                       
                                    
                                 
                              
                           
                        In the above, d is the distance of the point where approximate response is required to the origin of the approximating domain and R
                        
                           I
                         is the radius of the sphere of influence, chosen as twice the distance between the center point and the extreme most experimental point. The value of R
                        
                           I
                         is so chosen in order to secure sufficient number of neighboring experimental points so as to avoid singularity. More details about the calculation of R
                        
                           I
                         can be found elsewhere [20,27]. Eventually, a weight matrix W(x) can be constructed by using the weighting function in the diagonal terms as follows:
                           
                              (7)
                              
                                 W
                                 (
                                 x
                                 )
                                 =
                                 
                                    [
                                    
                                       
                                          
                                             
                                                
                                                   w
                                                   (
                                                   x
                                                   -
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   )
                                                
                                             
                                             
                                                0
                                             
                                             
                                                0
                                             
                                             
                                                0
                                             
                                          
                                          
                                             
                                                0
                                             
                                             
                                                
                                                   w
                                                   (
                                                   x
                                                   -
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   )
                                                
                                             
                                             
                                                
                                                   .
                                                   .
                                                
                                             
                                             
                                                0
                                             
                                          
                                          
                                             
                                                
                                                   .
                                                   .
                                                
                                             
                                             
                                                
                                                   .
                                                   .
                                                
                                             
                                             
                                                
                                                   .
                                                   .
                                                
                                             
                                             
                                                
                                                   .
                                                   .
                                                
                                             
                                          
                                          
                                             
                                                
                                                   .
                                                   .
                                                
                                             
                                             
                                                
                                                   .
                                                   .
                                                
                                             
                                             
                                                
                                                   .
                                                   .
                                                
                                             
                                             
                                                
                                                   .
                                                   .
                                                
                                             
                                          
                                          
                                             
                                                0
                                             
                                             
                                                0
                                             
                                             
                                                
                                                   .
                                                   .
                                                
                                             
                                             
                                                
                                                   w
                                                   (
                                                   x
                                                   -
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         n
                                                      
                                                   
                                                   )
                                                
                                             
                                          
                                       
                                    
                                    ]
                                 
                              
                           
                        The weighting function has its maximum value of unity at a normalized distance of zero and zero value (minimum) outside of unit normalized distance, i.e. w (0.0)=1.0, w (d/R
                        
                           I
                        >1.0)=0.0. The function decreases smoothly from 1.0 to 0.0. By minimizing the least-squares estimators L
                        
                           y
                        (x), the coefficients β(x) can be obtained by the matrix operation as below,
                           
                              (8)
                              
                                 β
                                 (
                                 x
                                 )
                                 =
                                 
                                    
                                       [
                                       
                                          
                                             x
                                          
                                          T
                                       
                                       W
                                       (
                                       x
                                       )
                                       x
                                       ]
                                    
                                    
                                       −
                                       1
                                    
                                 
                                 
                                    
                                       x
                                    
                                    T
                                 
                                 W
                                 (
                                 x
                                 )
                                 y
                              
                           
                        It is important to note here that the coefficients β(x) are the function of location x, where the approximation is sought. Thus, the procedure to calculate β(x) is a local approximation and ‘moving’ processes performs a global approximation throughout the whole design domain.

The FEMU procedure primarily follows three steps: selecting the model parameters required to be updated, setting-up of an objective function and use of a robust optimization algorithm. In the present study, the static displacement is considered as the response variables for FEMU. However, the formulation presented here is not limited to so but can be readily applied by using various structural responses i.e. static displacement, strain and or dynamic responses (frequency, mode shape and time history responses). The updating of parameters which are consistent with the structural behaviors (response) can be posed as an optimization problem. It is basically minimization of a nonnegative error function i.e. the residuals between the response obtained from the solution of the FE model of the structure and the measured responses from the actual structure which can be expressed as
                           
                              (9)
                              
                                 Minimize
                                 ,
                                 
                                 ε
                                 =
                                 
                                    ∑
                                    
                                       k
                                       =
                                       1
                                    
                                    r
                                 
                                 
                                    
                                       
                                          (
                                          
                                             
                                                U
                                             
                                             
                                                k
                                             
                                          
                                          −
                                          
                                             
                                                y
                                             
                                             
                                                k
                                             
                                          
                                          )
                                       
                                       2
                                    
                                 
                                 where
                                 ,
                                 
                                 K
                                 (
                                 X
                                 )
                                 
                                    
                                       U
                                    
                                    
                                       k
                                    
                                 
                                 =
                                 
                                    
                                       F
                                    
                                    
                                       k
                                    
                                 
                                 ,
                                 
                                 
                                    
                                       X
                                    
                                    
                                       L
                                    
                                 
                                 <
                                 X
                                 <
                                 
                                    
                                       X
                                    
                                    
                                       U
                                    
                                 
                              
                           
                        In the above, y
                        
                           k
                         is the kth set of known measured static response and U
                        
                           k
                         is the response obtained from the associated FE model, r is the total numbers of observation cases considered in the updating procedure. In a typical sensitivity based formulation, the optimization problem is solved iteratively using a sensitivity coefficient matrix. The sensitivity coefficient matrix is the first order derivatives of the response quantities with respect to the model parameters obtained through the first-order Taylor series based perturbation method [28]. Like many other applications, the applicability and success of first order perturbation approach is limited to the condition that the difference between the measure and the actual response should be less so that the first order perturbation is valid.

The proposed updating procedure start with replacing the evaluation of FE response quantity U
                        
                           k
                         by meta-model f(X) obtained by the RSM as discussed in Section 2.2. Thus, the optimization problem for FEMU algorithm is simplified as following:
                           
                              (10)
                              
                                 Minimize
                                 ,
                                 
                                 ε
                                 =
                                 
                                    ∑
                                    
                                       k
                                       =
                                       1
                                    
                                    r
                                 
                                 
                                    
                                       
                                          (
                                          f
                                          (
                                          X
                                          )
                                          −
                                          
                                             
                                                y
                                             
                                             
                                                k
                                             
                                          
                                          )
                                       
                                       2
                                    
                                 
                                 ,
                                 
                                 
                                    
                                       X
                                    
                                    
                                       L
                                    
                                 
                                 <
                                 X
                                 <
                                 
                                    
                                       X
                                    
                                    
                                       U
                                    
                                 
                              
                           
                        
                     

It may be noted that the objective function is now becomes a simple mathematical function. To be specific, it involves a second order polynomial in terms of the parameters need to be updated (X) avoiding the evaluations of complex FE model during the optimization procedure.

The implementation of the proposed FEMU procedure using static response is a three-stage interlinked procedure, viz.: (i) analysis of the FE model for selected set of input variables as per the DOE to obtain the required response necessary to construct the response surface, (ii) evaluation of the response function f(X) following the MLSM based RSM during the iteration of the optimization process utilizing the computed responses as per the DOE in step (i) and, (iii) finally checking the convergence of the optimization solution and getting the desired updated model parameters. It is important to note that for each update of the parameters during the iteration process, the MLSM based RSM is re-called and new approximation function is formed. This is not the case for LSM based RSM where a single approximation function f(X) gets operated throughout the iteration process i.e. the coefficient of a RS is constant and does not change with X.

The proposed MLSM based FE model updating is intended for updating the FE model parameters utilizing measured response from the actual structure. However, in the present study no experimental investigation was done and the input response data required is artificially generated to verify the capability of the proposed FEMU algorithm. This is achieved by reducing the base line values of the parameters required to be updated. Thereby, the degree of change in the parameters could be related to the extent of change one want to simulate for any parameters. The FE structural analysis is performed in ANSYS software to obtain the structural response with these reduced parameters values and used as the necessary input response of the FEMU algorithm.

The errors in the measured responses are bound to occur during actual field measurement. It is therefore essential to estimate the relationship between the errors in the measurements and the resulting errors in the identified model parameters. It may then only be possible to establish the limits on the measurement errors compatible with the accuracy requirements in the parameter updating procedure. The errors associated with different measuring devices can have different error distributions. For the method presented here, zero-mean uniform random numbers are generated and scaled by the corresponding percentage measurement error and added absolutely to the simulated measurements. Typical error distributions that are used in literature to simulate error are uniform and normal probability distributions. Specifically, in the present study the model parameters are identified by introducing certain amount of uniform predefined error in any response quantity as following:
                           
                              (11)
                              
                                 
                                    
                                       y
                                    
                                    
                                       e
                                       r
                                       r
                                       o
                                       r
                                    
                                 
                                 =
                                 y
                                 +
                                 (
                                 α
                                 p
                                 y
                                 )
                              
                           
                        where, y
                        
                           error
                         is the erroneous response, y is the actual response obtained from the FE model with pre-assigned input data, p is the percentage of error introduced, α is a random number between −1 and +1. Finally, the standard Monte Carlo Simulation (MCS) study is performed to extract the statistical properties of the updated model parameters to study the effect of errors in the input response data on the proposed FEMU procedure. The number of simulation (1000 in the present study) is fixed when the fluctuation of the output (model parameters) becomes stable. Statistical properties, i.e. the expected value and the coefficient of variation (cov) of the updated parameters are extracted from the ensemble to study the performance of the algorithm.

The usually adopted LSM based RSM and the MLSM based proposed RSM method of FEMU procedure as discussed in Section 2.4 is illustrated through two numerical examples. The specific purpose of the numerical study is to demonstrate the advantage with regard to the accuracy and robustness of the MLSM based RSM approach compare to the conventional LSM based RSM approach to predict the updated parameters of the FE model. For this, a comparative study of the model parameter updating is performed by the two approaches to elucidate the improvement that is possible to achieve by adopting the MLSM based approach over the LSM based approach of FEMU procedure.

The first numerical example considered to illustrate the proposed MLSM based adaptive RSM based FEMU procedure is a 10 bar truss as shown in 
                        Fig. 1. Unless mentioned otherwise, the nominal values (base line values) of the geometric and material properties are taken as: cross section area of the horizontal members (A1)=8500mm2, vertical members (A2)=1500mm2, diagonal members (A3)=6000mm2, Length (L)=10m, and modulus of elasticity of the truss members (E)=10.0×10N/mm2.

The axial rigidity (EA) of the horizontal, vertical and diagonal members of the truss denoted as x1, x2 and x3, respectively are considered as the model parameters required to be updated. The actual measured response of the structure for which parameter updating is sought is essential. The artificially generated response as described in Section 2.4 is used in the present study to apply the FEMU algorithm. Specifically, this is performed by a reduction in the axial rigidity values of various truss members and four sets of such axial rigidity values (which are mentioned as case 1, case 2, case 3 and case 4 in 
                        
                        Table 2), obtained by reducing the base line values by an amount of 10%, 20%, 30% and 40%, respectively. These four cases are used to verify the capability of the proposed FEMU algorithm. The vertical deflection at node 2 is used as the response measure for applying the parameter updating algorithm. The deflection values obtained from four different load cases as depicted in Table 1 are used in the FEMU procedure for all the base line values as described earlier.

The DOE is performed by considering the center and axial points following the saturated design method [29]. The points chosen are the base line values of the input variables (X
                        
                           i0) and at axial points, X
                        
                           i
                        =X
                        
                           i0±h
                        
                           i
                        
                        σ, where h
                        
                           i
                         is a positive integer and σ is taken as 10% of the respective base line values. For each input variable three axial points (h
                        
                           i
                        =1, 2 and 3) are considered on each axis to cover the different levels of the input parameters covering maximum possible ranges of the model parameters. With considered three different values of h, the response surface covers an approximation zone of 30% above and below the respective base line values. For each level, if there are n numbers of parameters involve in the responses surface model, 2n+1 numbers of sampling points are required. Thus, the total numbers of sampling points in the DOE for input parameters, n=3 are: (2×3+1)×3=21. The responses y
                        
                           
                              i
                           
                         are obtained at the design points with the aid of FE analysis of the model and these are used to obtain the desired RS.

To study the effectiveness of the proposed MLSM based adaptive RSM over the LSM based RSM for FEMU, the predicted model parameter values are compared with the predetermined model parameters which are taken as the input to the FE model (the base line values) to artificially generate the observed response. The model parameter identification by the LSM and the MLSM based approaches are depicted in Table 2. It can be observed that both the MLSM and LSM based RSM approaches can identify the parameter well. But as expected the MLSM based approach identifies better than the LSM based RSM. This is particularly prominent when the model parameters are far from its base line values. It may be noted that the DOE data are selected around this base line values for constructing the RSM. Therefore, the accuracy of approximation of FE response by RS models reduces largely beyond the range of data points which are used in the DOE to construct the metamodel. However, the MLSM based RSM better captures the actual trend of the FE model response even beyond the sampling zone [21] and clearly revealed the superiority of the adaptive MLSM over the conventional LSM based RSM strategy. In this regard, it may be noted that during the iteration stage of any gradient based optimization algorithm, the model parameter may take values outside the sampling range depending on the specific nature of the response. Consequently, the error due to less accurate LSM prediction gets induced in the optimization process. This results in less accuracy in the updated parameters.

The FEMU results presented in the above are for ideal case when there is no error in the measurements i.e. the theoretical responses of the numerical model are computed (noise-free output measurements) and these computed responses quantities are then used to obtain the pre-assigned parameters used in the generation of simulated data. To study the effect of measurement error in the updated parameters, the input response data are now polluted with different percentage of error and the MCS study is performed following the procedure as described in 2.4 to extract the statistical properties of the updated model parameters. The mean values of the identified model parameters and the associated error percentage obtained by the proposed MLSM based and the conventional LSM based RSM methods are depicted in 
                        Table 3 for case 3 i.e. the base line values are reduced by 30%. It is noted that that both the algorithm works well even if the error is induced in the input response data. As expected for both the cases the accuracies of the updated parameters decrease with the increase in the percentage of errors in the input responses. However, the proposed MLSM based RSM identifies the parameters much better than the LSM based RSM. Though, not shown here the observations for other cases are similar.

It is well known that the mean estimate of the model parameters cannot represents a reliable estimation and variance also plays an important role to indicate the confidence i.e. robustness of estimation procedure. The less cov of an updated parameter will indicate less mean square error of the estimated parameter. Thus, the cov of the various updated parameters for different percentage of errors are further computed through MCS. The values of the covs of the model parameters for different percentage of errors are shown in 
                        
                        
                        Figs. 2–4. It can be seen from the plots that the cov increases with the increase in percentage of error in responses. The covs of the updated parameters has linearly related with intensity of error and remains so for higher intensity of damage as well which shows the robustness of the proposed algorithm. However, the covs of the updated parameters by the LSM based algorithm are more than that of obtained by the MLSM based RSM approach. Thus, the MLSM based method not only yields the better predictions in parameter updating in mean sense as noted in Table 3, the less value of cov for different level of unavoidable errors in the input response indicates the better reliability/robustness of the MLSM based approach in updating the model parameters.

A masonry culvert subjected to a vertical pressure of 0.6MPa at top as shown in 
                        Fig. 5a, is taken up as the second example. The value of modulus of elasticity (E) and Poisson's ratio (ν) is taken as 40GPa and 0.15, respectively. By considering the symmetry, the geometry entity model as shown in Fig. 5b is sufficient to consider for FE analysis.

A FE model of the culvert is developed in ANSYS using PLANE 183 elements (eight nodded element having two degrees of freedom at each node; translations in the nodal x and y directions).The element may be used as a plane element (plane stress, plane strain and generalized plane strain) or as an axi-symmetric element. The elasticity of the material of the culvert (E), the horizontal and vertical spring constant (k1 and k2) defining the in-plane boundary conditions along bottom horizontal line are taken as the three model parameters required to be updated. These are denoted as parameter, x1, x2 and x3. The baseline values of these parameters are taken as 4E10, 5E10 and 6E10, respectively. The input static displacement data required is artificially generated similar to the previous problem. Four sets of such parameter values (which are mentioned as case 1, case 2 and case 3 in 
                        Table 4), obtained by reducing the base line values by an amount of 10%, 20%, and 30%, respectively.

The DOE is performed by considering the center and axial points following SD method as earlier. The points chosen are: X
                        
                           i
                        =X
                        
                           i0±h
                        
                           i
                        
                        σ, where h
                        
                           i
                        =1, 2 and 3 and σ is taken as 10% of the respective base line values. Thus, the total numbers of sampling points for this problem is 21. The responses y (deflections at top four nodes) are obtained at the design points with the aid of FE analysis of the model and these responses are then used to obtain the desired RS. The model parameter identification by the LSM and the MLSM based approaches are depicted in Table 4. It can be observed that both the MLSM and the LSM based approaches can identify the parameter well. The observations of superior identification capability by the proposed MLSM based RSM compare to the LSM based RSM remain similar to the previous problem.

The error sensitivity of both the LSM and MLSM based RSM are studied further for this problem also. The model parameters of the culvert are identified for erroneous response by both the MLSM and LSM base RSM. The predetermined parameter values of x1, x2 and x3 are taken as 4.40E+10, 4.20E+10 and 6.4E+10, respectively. The mean values of the identified parameters are depicted in 
                        Table 5. With increase in the percentage of errors in the responses, the accuracies of the parameter identification of both the approaches decrease but the MLSM based proposed RSM identify the model parameter better than LSM approach for this problem also.

The associated values of the covs of the model parameters for different percentage of errors in the responses are shown in 
                        
                        
                        Figs. 6–8. Like previous problem, the covs of the updated parameters increases with the increase in the percentage of error in responses. However, the covs of the updated parameters by the LSM based algorithm are more than that of obtained by the MLSM based approach similar to the previous problem.

An efficient MLSM based adaptive RSM is proposed to approximate the FE response of structures for FEMU of large complex structures. This excludes the complexity of repeated FE solution for obtaining structural response and their sensitivities which are required for solving the FEMU problems. A comparative assessment is being made between the MLSM based RSM and the usually adopted LSM based approach for FEMU. In general both the LSM and MLSM based RSM approach of FEMU algorithms can update the model parameters successfully. However, the MLSM based RSM identifies the model parameters better than the LSM based RSM, particularly when the model parameters are far from its base line values. The updated model parameter obtained by the conventional LSM based RSM show significant deviation from the proposed MLSM based RSM results. This indicates large errors in the update of the optimal solution during the iteration stage of the optimization algorithm, particularly, when the values of the model parameters are beyond the range of the values considered in the DOE. The error sensitivity study for both the method shows that the accuracies of the updated parameters by both the approaches decrease with increasing percentage of errors in the responses. However, the errors in the identified model parameters by the proposed MLSM based RSM approach due to the error in the response data are seen to be much lower than that of obtained by the LSM based approach. The cov of the updated model parameters generally increases with the increase in percentage of error in measure data. However, the cov of updated parameters by the LSM based RSM are more than that of obtained by the MLSM based RSM. This clearly indicates the robustness of the MLSM based approach over the LSM based approach. The FEMU formulation presented here is restricted to static displacement response only, but the concept can be readily applied for dynamic responses also. The present study is considered simulated response data only for demonstration of the proposed MLSM-RSM based FEMU algorithm. However, for more convictive validation, experimental study is felt important to prove the superiority of the MLSM method over the LSM method considering actual measured response which is under consideration at this stage.

@&#REFERENCES@&#

